{"version":3,"sources":["components/ManagerPanel/ManagerPanel.module.css","components/ManagerPanel/ManagerContent.module.css","components/ManagerPanel/TableContent/TableContent.module.css","components/ManagerPanel/NavBar/NavBar.module.css","redux/NotificationsReducer.js","components/AuthForm/AuthForm.jsx","components/ManagerPanel/NavBar/NavBar.jsx","components/ManagerPanel/InputForm/InputForm.jsx","components/ManagerPanel/TableContent/TableContent.jsx","components/ManagerPanel/Content.jsx","api/api.js","redux/Validates.js","redux/ManagerReducers/Products.js","redux/ManagerReducers/Options.js","redux/ManagerReducers/Additives.js","redux/ManagerReducers/Category.js","redux/ManagerReducers/Stocks.js","redux/ManagerReducers/Users.js","redux/ManagerReducers/Cooperations.js","redux/ManagerReducers/Contacts.js","redux/ManagerReducers/Comments.js","redux/ManagerReducers/Levels.js","redux/ManagerReducers/Branches.js","components/ManagerPanel/ManagerPanel.jsx","components/Notifications/Notifications.jsx","App.jsx","serviceWorker.js","redux/NavBarReducer.js","redux/reduxStore.js","index.js","components/AuthForm/AuthForm.module.css","components/ManagerPanel/InputForm/InputForm.module.css","components/Notifications/Notifications.module.css"],"names":["module","exports","initialState","List","NotificationsAC","data","type","NotificationsReducer","state","action","stateCopy","tempList","splice","required","value","undefined","phoneMin","slice","replace","length","phoneMax","renderField","input","label","meta","touched","error","warning","placeholder","connect","form","dispatch","onSubmit","FormData","axios","then","response","Error","Type","Message","sessionStorage","setItem","Token","UserName","window","location","href","reduxForm","props","handleSubmit","pristine","reset","submitting","className","s","Container","AuthForm","Title","Form","date","FormItem","Field","name","component","validate","FormButtons","Reset","disabled","onClick","Submit","NavBar","ChangeMinimized","ind","TempMinimized","LinkGroups","Minimized","TempLinkGroups","map","el","setState","index","key","Icon","src","style","filter","Text","color","Links","uuidv4","activeClassName","activeLink","Link","to","Name","minHeight","innerHeight","CommonData","localStorage","getItem","this","Footer","Exit","removeItem","React","Component","asd","Item","ref","FieldFileInput","onChange","bind","e","target","files","accept","Explanations","Validate","pattern","arrOption","FormType","Options","Key","Data","JSON","stringify","console","log","multiple","selected","Status","Popup","Open","OnClose","children","PopupContent","PopupHead","PopupClose","RenderComposition","ChangeVisibilityList","VisibilityList","ChangeVisibilityColumn","TempArr","Items","Visibility","FormComposition","VisibilityPopup","PopupIndex","PopupItem","fields","getAll","CompositionTitle","Tool","cursor","margin","defaultChecked","Value","Formula","forEach","elF","Sign","parseFloat","get","Element","Number","ItemName","FormItemMessage","FormItemMessageTitle","FormItemMessageValue","ClassName","item","parse","title","remove","push","InitialObject","Add","marginTop","submitFailed","InputPanel","Head","goBack","Back","Object","values","InputForm","FormMainItems","Composition","FieldArray","invalid","TextSubmit","InputPanelConteiner","ComposinionTable","TD","rowData","titles","ColumnName","TR","content","Titles","Content","Table","ChangeDetailVisibility","indTR","Details","forceUpdate","ChangeSort","Sort","SortContent","currentSort","find","sort","a","b","rowTH","Config","arr","ImageProduct","alt","RowEnd","Change","history","pathname","Delete","confirm","Del","Id","arrComposition","el1","linkColumn","colSpan","TableContent","ChangeSearchData","Search","currentTarget","ContentFilter","indexOf","Get","ToolsBal","backgroundColor","ExportTable","document","getElementsByClassName","cloneNode","AddButton","withRouter","ManagerContent","exact","path","render","methods","ThunkCreator","actionCreator","setInitialValues","formName","initialValues","instance","baseURL","headers","Url","catch","alert","Post","post","Patch","patch","delete","Branches","Additives","Products","Category","Stocks","User","Levels","Comments","Contacts","Cooperations","setData","Api","append","Image","OldImage","Description","IdCategory","Reducer","Address","BranchProducts","elf","IdProduct","elm","IdBranch","BranchesTable","join","ProductOption","ListAdditives","IdProductOption","IdAdditive","AdditivesTable","AdditiveName","Weight","Price","DateBegin","DateEnd","PromoCode","temp","Addresses","IdRole","IdLevel","Users","Date","ManagerPanel","PAC","PTC","OAC","OTC","AAC","ATC","CAC","CTC","StocksAC","StocksTC","CommentsAC","CommentsTC","ContactsAC","ContactsTC","CooperationsAC","CooperationsTC","LevelsAC","LevelsTC","UsersAC","UsersTC","BAC","BTC","Notifications","setTimeout","Notification","App","Boolean","hostname","match","NavBarReducer","redusers","combineReducers","formReducer","ProductsReducer","AdditivesReducer","BranchesReducer","OptionsReducer","CategoryReducer","StocksReducer","UsersReducer","LevelsReducer","CommentsReducer","ContactsReducer","CooperationsReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5a46b221.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ManagerPanel\":\"ManagerPanel_ManagerPanel__2g6dB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ManagerContent\":\"ManagerContent_ManagerContent__3NZnD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TableContent\":\"TableContent_TableContent__197JZ\",\"Head\":\"TableContent_Head__2D1sk\",\"Title\":\"TableContent_Title__2VDAi\",\"ToolsBal\":\"TableContent_ToolsBal__sZ0fZ\",\"Tool\":\"TableContent_Tool__6FWW2\",\"VisibilityList\":\"TableContent_VisibilityList__1M6lb\",\"AddButton\":\"TableContent_AddButton__2BiEi\",\"Content\":\"TableContent_Content__31dzR\",\"Search\":\"TableContent_Search__9z17F\",\"Table\":\"TableContent_Table__9ut_Z\",\"ImageProduct\":\"TableContent_ImageProduct__3sg8V\",\"RowEnd\":\"TableContent_RowEnd__sv7UY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__3GsPI\",\"CommonData\":\"NavBar_CommonData__1QhMl\",\"LinkGroups\":\"NavBar_LinkGroups__3iJuX\",\"Title\":\"NavBar_Title__2h_1u\",\"Icon\":\"NavBar_Icon__2hSrV\",\"Text\":\"NavBar_Text__3uFDP\",\"Link\":\"NavBar_Link__1YKsX\",\"activeLink\":\"NavBar_activeLink__2MgxI\",\"Footer\":\"NavBar_Footer__1RDOC\",\"User\":\"NavBar_User__295ek\",\"Exit\":\"NavBar_Exit__2cE8n\"};","\nlet initialState = {\n    List: []\n};\n\nconst NotificationsReducer = (state = initialState, action) => {\n\t\n\tlet stateCopy = {...state};\n\t\n\tswitch (action.type) {\n        case \"SET_Notifications\":{\n            stateCopy.List = [...stateCopy.List, action.data]\n\t\t\treturn stateCopy;\n\t\t}\n        case \"Delete_Notification\":{\n            let tempList = [...stateCopy.List];\n            tempList.splice(action.data, 1);\n            stateCopy.List = tempList;\n\t\t\treturn stateCopy;\n\t\t}\n\t\tdefault:{\n\t\t\treturn state;\n\t\t}\n\t}\n}\nexport const NotificationsAC = {\n    SetNotification: (data) => {\n        return {\n            type: \"SET_Notifications\",\n            data: data\n        };\n    },\n    DeleteNotification: (data) => {\n        return {\n            type: \"Delete_Notification\",\n            data: data\n        };\n    }\n}\n\nexport default NotificationsReducer;\n","import React from 'react';\nimport * as axios from 'axios';\nimport s from'./AuthForm.module.css';\nimport {connect} from 'react-redux';\nimport { FieldArray, Field, reduxForm } from 'redux-form';\n\nimport {NotificationsAC} from '../../redux/NotificationsReducer';\n\n//Валидация\nconst required = value => (value || typeof value === 'number' ? undefined : 'Обязательный, (+79876543210)')\nconst phoneMin = value => value.slice(2).replace(/[^\\d]/g, '').length < 10?  \"Номер введен не полностью, (+79876543210)\": undefined\nconst phoneMax = value => value.slice(2).replace(/[^\\d]/g, '').length > 10?  \"Номер введен большой, (+79876543210)\": undefined\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  meta: { touched, error, warning }\n}) => (\n  <div>\n    <label>{label}</label>\n    <div>\n      <input {...input} placeholder={label} type={type} />\n      {touched &&\n        ((error && <span>{error}</span>) ||\n          (warning && <span>{warning}</span>))}\n    </div>\n  </div>\n)\n\nconst AuthForm = (props) => {\n  const { handleSubmit, pristine, reset, submitting } = props\n  let Submit = (date) => {\n    handleSubmit(date)\n    reset()\n  }\n\treturn (\n    <div className={s.Container}>\n      <div className={s.AuthForm}>\n        <div className={s.Title}>Вход</div>\n        <form className={s.Form} onSubmit={Submit}>\n          <div className={s.FormItem}>\n            <Field\n              name=\"Phone\" \n              type=\"phone\"\n              component={renderField} \n              label=\"Телефон\"\n              validate={[ required, phoneMin, phoneMax]}\n            />\n          </div>\n          <div className={s.FormItem}>\n            <Field\n              name=\"Password\"\n              type=\"password\"\n              component={renderField}\n              label=\"Пароль\"\n              validate={[required]}\n            />\n          </div>\n          <div className={s.FormButtons}>\n            <div>\n              <button className={s.Reset} type=\"button\" disabled={pristine || submitting} onClick={reset}>Стереть</button>\n            </div>\n            <div>\n              <button className={s.Submit} type=\"submit\" disabled={submitting}>Авторизация</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n};\n\nlet mapStateToProps = (state) => {\n\treturn {\n    form: \"Auth\",\n  };\n}; \n\nlet mapDispatchToProps = (dispatch) => {\n\treturn {\n    onSubmit: (FormData) => {\n      axios.post('/api/User/auth', {...FormData})\n        .then(function (response) {\n          if(!response.data.Error){\n            sessionStorage.setItem(\"Token\", response.data.Token)\n            sessionStorage.setItem(\"UserName\", response.data.UserName)\n            dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.data.Message}));\n            window.location.href = \"/\"\n          }else{\n            dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.data.Message}));\n          }\n        })\n    }\n\t}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm()(AuthForm));\n","import React from 'react';\nimport s from'./NavBar.module.css';\nimport {NavLink} from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass NavBar extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            LinkGroups: this.props.NavBar.LinkGroups.map((el)=>{\n                return {...el, Minimized: false}\n            })\n        };\n    }\n\t\n    ChangeMinimized = (ind) => {\n        let TempMinimized = ( this.state.LinkGroups[ind].Minimized )? false: true;\n        let TempLinkGroups = this.state.LinkGroups.map(el => {\n            return {...el, Minimized: false}\n        });\n        TempLinkGroups[ind].Minimized = TempMinimized;\n        this.setState({\n            LinkGroups: TempLinkGroups\n        });\n    }\n    \n    LinkGroups = (data, index) => {\n        return( \n            <div className={s.LinkGroups} key={index}>\n                <div className={s.Title} onClick={()=> this.ChangeMinimized(index)} key={index}>\n                    <img \n                        className={s.Icon} \n                        src={\"/Assets/Icons/NavBar/\" + data.Icon} \n                        style={{filter: (data.Minimized? \"invert(20%) sepia(34%) saturate(1105%) hue-rotate(339deg) brightness(102%) contrast(101%)\": null)}}/>\n                    <div className={s.Text} style={{color: (data.Minimized? \"rgba(255, 182, 41, 1)\": null)}}>{data.Title}</div>\n                </div>\n                {data.Minimized?\n                    <ul>\n                        {data.Links.map((el, ind)=> <li key={uuidv4()}><NavLink key={ind+\"link\"} activeClassName={s.activeLink} className={s.Link} to={el.Link}>{el.Name}</NavLink></li>)}\n                    </ul>\n                    : null}\n            </div>\n        );\n    }\n    \n\trender(){\n        return (\n            <div className={s.NavBar} style={{minHeight: window.innerHeight}}>\n                <div className={s.CommonData}>\n                    <div>Логотип</div>\n                    <div><img src={\"/Assets/Icons/NavBar/Logo.png\"}/></div>\n                    <div>{localStorage.getItem(\"UserName\")}</div>\n                </div>\n                <hr/>\n                {this.state.LinkGroups.map(\n                    (el, ind)=> {\n                      return this.LinkGroups(el, ind);\n                    }\n                )}\n                <hr/>\n                <div className={s.Footer}>\n                    <div><a href=\"/\" className={s.Exit} onClick={() => {localStorage.removeItem(\"Token\"); localStorage.removeItem(\"UserName\");}}>Выйти</a></div>\n                </div>\n            </div>\n\t   )\n    }\n}\n\nexport default NavBar;","import React, {compose} from 'react';\nimport * as axios from 'axios';\nimport s from './InputForm.module.css';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport { FieldArray, Field, reduxForm } from 'redux-form';\n\nconst renderField = ({input, data, label, type, asd, meta: { touched, error, warning } }) => {\n    let Item = null;\n    Item = <input ref={data} {...input} type={type} placeholder={label} required/>;\n    if(type === \"textarea\"){\n        Item = <textarea {...input} placeholder={label} required></textarea>;\n    };\n    if(type === \"checkbox\"){\n        Item = <input ref={data} {...input} type={type} placeholder={label}/>;\n    };\n    return(\n        <>\n            {Item}\n            {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\n        </>\n    )\n};\n\nclass FieldFileInput extends React.Component{\n  constructor(props) {\n    super(props)\n    this.onChange = this.onChange.bind(this)\n  }\n\n  onChange(e) {\n    const { input: { onChange } } = this.props;\n    onChange(e.target.files[0]);\n  }\n\n  render(){\n    const { input: { value } } = this.props\n    const {input,label, required, meta, } = this.props  //whatever props you send to the component from redux-form Field\n    return(\n     <div>\n       <input\n        type='file'\n        accept='.jpg, .png, .jpeg'\n        onChange={this.onChange}\n       />\n     </div>\n    )\n}\n}\n\nclass FormItem extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {Item: null};\n        switch (this.props.Type){\n            case \"Text\": \n                this.state.Item = <Field\n                                type={\"input\"}\n                                label={this.props.Explanations} \n                                name={this.props.Name}\n                                component={renderField}\n                                validate={this.props.Validate} />;\n                break;\n            case \"Password\": \n                this.state.Item = <Field\n                                type={\"password\"}\n                                name={this.props.Name}\n                                component={renderField}\n                                validate={this.props.Validate} />;\n                break;\n            case \"TextArea\": \n                this.state.Item = <Field\n                                type={\"textarea\"}\n                                name={this.props.Name}\n                                component={renderField}\n                                validate={this.props.Validate} />;\n                break;\n            case \"Number\":\n                this.state.Item = <Field\n                                type={\"number\"}\n                                name={this.props.Name}\n                                 component={renderField}\n                                 validate={this.props.Validate} />;\n                break;\n            case \"Checkbox\":\n                this.state.Item = <Field\n                                type={\"checkbox\"}\n                                name={this.props.Name}\n                                 component={renderField}\n                                 validate={this.props.Validate} />;\n                break;\n            case \"Phone\":\n                this.state.Item = <Field\n                                type={\"tel\"}\n                                pattern={\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"}\n                                label={\"999-999-9999\"}\n                                name={this.props.Name}\n                                component={renderField}\n                                validate={this.props.Validate} />;\n                break;\n            case \"Date\":\n                this.state.Item = <Field\n                                type={\"datetime-local\"}\n                                name={this.props.Name}\n                                component={renderField}\n                                validate={this.props.Validate} />;\n                break;\n            case \"Color\":\n                this.state.Item = <Field\n                                type={\"color\"}\n                                name={this.props.Name}\n                                component={renderField}\n                                validate={this.props.Validate} />;\n            case \"File\":\n                this.state.Item = <Field\n                                type={\"file\"}\n                                name={this.props.Name}\n                                component={FieldFileInput}\n                                validate={this.props.Validate} />;\n                break;\n            case \"Select\":\n                let arrOption;\n                if(this.props.FormType == \"Main\"){\n                   arrOption = [<option key={0} value={\"Не выбрано\"}>Не выбрано</option> , \n                               ...(this.props.Options.map( (el, ind) => (<option key={ind+1} value={el.Key}>{el.Data}</option>)))];\n                }\n                if(this.props.FormType == \"Composition\"){\n                    arrOption = [<option key={0} value={JSON.stringify(\"Не выбрано\")}>Не выбрано</option> , \n                               ...(this.props.Options.map( (el, ind) => (<option key={ind+1} value={JSON.stringify(el.Key)}>{el.Data}</option>)))];\n                };\n                this.state.Item = <Field\n                                    name={this.props.Name}\n                                    component={\"select\"}\n                                    validate={this.props.Validate}>;\n                                      {arrOption}\n                                  </Field>;\n                break;\n            case \"SelectMultiple\":\n              console.log(this.props.Options)\n              this.state.Item = <Field\n                                  multiple\n                                  name={this.props.Name}\n                                  component={\"select\"}\n                                  validate={this.props.Validate}>;\n                                      {this.props.Options.map( (el, ind) => (<option key={ind+1} value={el.Key} selected={(el.Status)? \"selected\": null }>{el.Data}</option>))}\n                              </Field>;\n                break;\n            default: \n\n                break;\n        }\n    }\n\trender(){\n\t\treturn (\n\t\t\t<label>\n                <span>{this.props.Explanations}</span>\n\t\t\t\t{this.state.Item}\n            </label>\n\t\t)\n\t}\n};\n\nconst Popup = ({Open, OnClose, children}) => {\n    if(!Open) return null;\n    return (\n\t\t<div className={s.Popup}>\n            <div className={s.PopupContent}>\n                <div className={s.PopupHead}>\n                    Элемент состава\n                </div>\n                {children}\n                <div className={s.PopupClose} onClick={() => OnClose()}>\n                    Сохранить\n                </div>\n            </div>\n        </div>\n    )\n}\n\nclass RenderComposition extends React.Component{ \n    constructor(props){\n        super(props);\n        this.state = { \n            Items: this.props.FormComposition.Items,\n            VisibilityList: false,\n            VisibilityPopup: false,\n            PopupIndex: null,\n            PopupItem: null\n        }\n        \n    }\n    //Изменение видимости списка, видимых столбцов \n    ChangeVisibilityList = () => {\n        this.setState({\n            VisibilityList: !this.state.VisibilityList\n        })\n    }\n    //Изменение списка, показываемых столбцов\n    ChangeVisibilityColumn = (ind) => {\n        let TempArr = this.state.Items;\n        if(TempArr[ind].Visibility){\n            TempArr[ind].Visibility = false;\n        }else{\n            TempArr[ind].Visibility = true;\n        };\n        this.setState({\n            Items: TempArr\n        });\n    }\n    \n\trender(){\n        let  Items = this.state.Items.filter(el =>  {return el.Visibility? 1: 0;});\n        if(!this.props.fields.getAll()){\n            return (\n                <>\n                    <div className={s.CompositionTitle}>Состав</div>\n                    <div>\n                        <img\n                            onClick={() => {\n                                this.props.fields.push(this.props.FormComposition.InitialObject);\n                                this.setState({\n                                    PopupIndex: this.props.fields.length,\n                                    PopupItem: `Composition[${this.props.fields.length}]`,\n                                    VisibilityPopup: true\n                                })\n                            }}\n                            className={s.Add}\n                            style={{cursor: \"pointer\", marginTop: \"10px\"}}\n                            title=\"Add item\" \n                            src={\"/Assets/Icons/InputPanel/Add.svg\"}/>\n                        {(this.props.touched || this.props.submitFailed) && this.props.error && <span>{this.props.error}</span>}\n                    </div>\n                </>)\n        }\n        return (\n        <div>\n            \n            <div className={s.CompositionTitle}>Состав</div>\n            <div className={s.Tool}>\n                <span \n                    onClick={() => this.ChangeVisibilityList()} \n                    style={{color: \"#FFB629\", cursor: \"pointer\"}}>\n                    Столбцы\n                </span>\n                {this.state.VisibilityList?\n                    (<div className={s.VisibilityList}>\n                        <div style={{margin: \"10px\"}}>Отображать столбцы</div>\n                        {this.state.Items.map((el, ind) => {\n                            return (\n                                <label key={ind}>\n                                    <input onClick={() => this.ChangeVisibilityColumn(ind)} type=\"checkbox\" defaultChecked={el.Visibility? true: false}/>\n                                    {el.Title}\n                                </label>\n                            )\n                        })\n                        }\n                    </div>): null}\n            </div>\n            <Popup Open={this.state.VisibilityPopup} OnClose={() => this.setState({VisibilityPopup: false, PopupIndex: null})}>\n                <div>\n                    {this.props.FormComposition.Items.map(\n                                (el, ind)=> {\n                                    if(el.Type === undefined && this.state.PopupIndex !== null){\n                                        let Value = 0;\n                                        el.Formula.forEach(elF => {\n                                            if(elF.Sign === \"+E\") Value += parseFloat(this.props.fields.get(this.state.PopupIndex)[elF.Element]);\n                                            if(elF.Sign === \"+N\") Value += parseFloat(elF.Number);\n                                            if(elF.Sign === \"*E\") Value *= parseFloat(this.props.fields.get(this.state.PopupIndex)[elF.Element]);\n                                            if(elF.Sign === \"*N\") Value *= parseFloat(elF.Number);\n                                        })\n                                        this.props.fields.get(this.state.PopupIndex)[el.ItemName] = Value;\n                                        return (\n                                            <div key={ind} className={s.FormItemMessage}>\n                                                <div className={s.FormItemMessageTitle}>{el.Title}</div>\n                                                <div className={s.FormItemMessageValue}>{Value}</div>\n                                            </div>);\n                                    }\n\n                                    return (\n                                        <div key={ind} className={s.FormItem}>\n                                            <FormItem\n                                                key={ind+\"FI\"}\n                                                ClassName={s.FormItem}\n                                                Name={`${this.state.PopupItem}.${el.ItemName}`}\n                                                Explanations={el.Title}\n                                                Type={el.Type}\n                                                FormType={\"Composition\"}\n                                                Options={el.Options}/>\n                                        </div>\n                                    )\n                                })\n                            }\n                </div> \n            </Popup>\n            <table>\n            <thead>\n                <tr>\n                    {Items.map((el, ind)=> <th key={ind}>{el.Title}</th>)}\n                </tr>\n            </thead>\n            <tbody>\n                {this.props.fields.map((item, index) =>\n                    <tr key={index}>\n                        {Items.map(\n                            (el, ind)=> {\n                                if(el.Type === \"Select\"){\n                                    return <td key={ind}>{JSON.parse(this.props.fields.get(index)[el.ItemName]).Name}</td>\n                                }\n                                if(el.Type === \"Checkbox\"){\n                                    return <td key={ind}>{this.props.fields.get(index)[el.ItemName]? \"Да\": \"Нет\"}</td>\n                                }\n                                return (\n                                        <td key={ind}>{this.props.fields.get(index)[el.ItemName]}</td>\n                                    )\n                                \n                            })\n                        }\n                        <td>\n                            <img\n                                style={{cursor: \"pointer\"}}\n                                title=\"Change Item\" \n                                src={\"/Assets/Icons/InputPanel/Change.svg\"}\n                                onClick={() => {\n                                    this.setState({\n                                        PopupIndex: index,\n                                        PopupItem: item,\n                                        VisibilityPopup: true\n                                    })\n                                }}/>\n                        </td>\n                        <td>\n                            <img\n                                style={{cursor: \"pointer\"}}\n                                title=\"Remove Item\" \n                                src={\"/Assets/Icons/InputPanel/Delete.svg\"}\n                                onClick={() => this.props.fields.remove(index)}/>\n                        </td>\n                    </tr>\n                )}\n            </tbody>\n        </table>\n            <div>\n                <img\n                    onClick={() => {\n                        this.props.fields.push(this.props.FormComposition.InitialObject);\n                        this.setState({\n                            PopupIndex: this.props.fields.length,\n                            PopupItem: `Composition[${this.props.fields.length}]`,\n                            VisibilityPopup: true\n                        })\n                    }}\n                    className={s.Add}\n                    style={{cursor: \"pointer\", marginTop: \"10px\"}}\n                    title=\"Add item\" \n                    src={\"/Assets/Icons/InputPanel/Add.svg\"}/>\n                {(this.props.touched || this.props.submitFailed) && this.props.error && <span>{this.props.error}</span>}\n            </div>\n        </div>\n        )\n\t}\n}\n\nclass InputPanel extends React.Component {\n\trender(){\n\t\treturn (\n\t\t\t<div className={s.InputPanel} style={{minHeight: window.innerHeight}}>\n                <div className={s.Head}>\n                    <div onClick={() => this.props.goBack()} className={s.Back}>\n                        <img src=\"/Assets/Icons/InputPanel/Back.svg\"/>\n                        <span>Назад</span>\n                    </div>\n                </div>\n                <div className={s.Title}>{this.props.Title}</div>\n                {/*Форма для заполения*/}\n                <div>\n                    <form onSubmit={this.props.handleSubmit} className={s.Form} >\n                        {/*Массив основных полей ввода*/}\n                        {Object.values(this.props.InputForm.FormMainItems).map(\n                            (el, ind) => \n                                <div key={ind} className={s.FormItem}>\n                                    <FormItem\n                                            Name={el.ItemName}\n                                            Explanations={el.Explanations}\n                                            Type={el.Type}\n                                            FormType={\"Main\"}\n                                            Validate={el.Validate}\n                                            Options={el.Options}/>\n                                \n\t\t\t                     </div>)}\n                        {/*Массив элементов состава*/}\n                        {this.props.InputForm.FormComposition?\n                        <div className={s.Composition}>\n                            <FieldArray FormComposition={this.props.InputForm.FormComposition} name=\"Composition\" component={RenderComposition}/> \n                        </div>\n                        : null}\n                        {/*Кнопки для работы с формой*/}\n                        <div className={s.FormButtons}>\n                            <div>\n                                <img\n                                    onClick={this.props.reset}\n                                    className={s.Reset}\n                                    title=\"Reset form\" \n                                    src={\"/Assets/Icons/InputPanel/Reset.svg\"}\n                                    disabled={this.props.pristine || this.props.submitting}/>\n                            </div>\n                            <div>\n                                <button className={s.Submit} disabled={this.props.invalid}>{this.props.TextSubmit}</button>\n                            </div>\n                        </div>\n                        \n                    </form>\n                </div>\n\t\t\t</div>\n\t\t)\n\t}\n};\n\nlet InputPanelConteiner = reduxForm()(InputPanel);\n\nexport default InputPanelConteiner;","import React from 'react';\nimport s from './TableContent.module.css';\nimport {withRouter, Link} from 'react-router-dom';\n\nclass ComposinionTable extends React.Component { \n    //строка ячеек таблицы\n    TD = (rowData, titles) => {\n        return titles.map((el, ind) => {\n            return (<td key={ind}>{rowData[el.ColumnName]}</td>)\n        });\n    }\n    //строка или два строки таблицы\n    TR = (content, titles) => {\n        return Object.values(content).map((el, ind) => {\n            return (\n                <tr key={ind}>{this.TD(el, titles)}</tr>\n            )\n        });\n    }\n    render(){\n        return (\n                <table>\n                    <thead>\n                        <tr>\n                            {this.props.Titles.map( (el, ind) => {\n                                return <th key={ind}>{el.Name}</th>\n                                }\n                            )}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.TR(this.props.Content, this.props.Titles)}\n                    </tbody>\n                </table>\n        )\n    }\n};\n\nclass Table extends React.Component {\n    //Изменение фидимости состава\n    ChangeDetailVisibility = (indTR) => {\n        this.props.Content[indTR].Details = (this.props.Content[indTR].Details)? false : true;\n        this.forceUpdate();\n    }\n    //Изменение параметра сортировки Контента \n    ChangeSort = (index) => {\n        this.props.Titles.forEach((el, ind) => {\n                if(ind === index){\n                    if(el.Sort === \"Desc\" || el.Sort === null){\n                        el.Sort = \"Asc\";\n                    }else{\n                        el.Sort = \"Desc\";\n                    }\n                }else{\n                    el.Sort = null;   \n                }\n                return el;\n            });\n        this.forceUpdate();\n    };\n    //Сортировка параметру Сортировки\n    SortContent = (Content) => {\n        let currentSort = this.props.Titles.find((el,ind) => {\n            if(el.Sort != null){\n                return true;\n            }else{\n                return false;\n            }\n        });\n        if(currentSort === undefined){ return Content;};\n        return Content.sort((a, b) => {\n            if(currentSort.Sort === \"Asc\"){\n                if(a[currentSort.ColumnName] > b[currentSort.ColumnName]){return 1;}else{return -1;}; return 0;\n            }\n            if(currentSort.Sort === \"Desc\"){\n                if(a[currentSort.ColumnName] < b[currentSort.ColumnName]){return 1;}else{return -1;}; return 0;\n            }\n            return 0;\n        });\n    };\n    //строка заголовков\n    rowTH = (titles) => {\n        return (\n            <tr>\n                {titles.map( (el, ind) => {\n                        if(el.Sort === \"Asc\"){return <th \n                                                        key={ind} \n                                                        onClick={()=>{this.ChangeSort(ind);}}\n                                                    >{el.Name + \"⮝\"}</th>};\n                        if(el.Sort === \"Desc\"){return <th \n                                                        key={ind} \n                                                        onClick={()=>{this.ChangeSort(ind);}}\n                                                    >{el.Name + \"⮟\"}</th>};\n                        return <th \n                                   key={ind} \n                                   onClick={()=>{this.ChangeSort(ind);}}\n                                >{el.Name}</th>\n                    }\n                )}\n            </tr>\n        )\n    }\n    //строка ячеек таблицы\n    TD = (rowData, Titles, Config, indTR, Composition) => {\n        let arr = Titles.map((el, ind) => {\n            if(el.ColumnName === \"Image\"){\n                return (\n                    <td key={ind}><img className={s.ImageProduct} src={\"http://localhost:5000/\"+rowData[el.ColumnName]} alt=\"Изображение\"/></td>\n                )\n            }\n            return (<td key={ind}>{rowData[el.ColumnName]}</td>)\n        });\n        let RowEnd = \n            <td key={arr.length+1}\n                className={s.RowEnd}>\n                {Config.Details? <div onClick={()=>{this.ChangeDetailVisibility(indTR)}}>Дeтали</div> : null}\n                {Config.Change?\n                    <div \n                        onClick={\n                                ()=>{\n                                    this.props.Change({...rowData, Composition: Composition});\n                                    this.props.history.push(this.props.history.location.pathname+\"/Change\");\n                                }}><img src=\"/Assets/Icons/TableContent/Change.svg\"/></div> : null}\n                {Config.Delete?\n                    <div\n                        onClick={\n                                ()=>{\n                                    console.log(  );\n                                    if(window.confirm(\"Точно удалить?\")){\n                                        this.props.Del({Id: rowData.Id});\n                                    }\n                                }\n                             }><img src=\"/Assets/Icons/TableContent/Delete.svg\"/></div> : null}\n            </td>\n        arr = [...arr, RowEnd];\n        return arr;\n    }\n    //строка или строка и подтаблица в таблице\n    TR = (Content, Titles, Composition, Config) => {\n        return Content.map((el, ind) => {\n            let arrComposition = (Composition? Composition.Content.filter((el1)=>{\n                    //id_com_ingredient\n                    if(el.Id == el1[Composition.linkColumn]){\n                        return true;\n                    }\n                    return false;\n            }): null);\n            if(Composition === null || Composition === undefined || !el.Details){\n                return (<tr key={ind}>{this.TD(el, Titles, Config, ind, arrComposition)}</tr>);    \n            };\n    \n            return (\n                <>\n                    <tr key={ind}>{this.TD(el, Titles, Config, ind, arrComposition)}</tr>\n                    <tr key={\"compositionTR_\"+ind}>\n                        <td colSpan=\"100\" key={\"compositionTD_\"+ind}>\n                            <ComposinionTable\n                                key={\"compositionTable_\"+ind}\n                                Titles={Composition.Title}\n                                Content={arrComposition}\n                                Config={Config}/>\n                        </td>\n                    </tr>\n                </>\n            )\n        });\n    }\n    render(){\n        return (\n                <table className={\"ExportTable\"}>\n                    <thead>\n                        {this.rowTH(this.props.Titles)}\n                    </thead>\n                    <tbody>\n                        {this.TR(this.SortContent(this.props.Content), this.props.Titles, this.props.Composition, this.props.Config)}\n                    </tbody>\n                </table>\n        )\n    }\n};\n\nclass TableContent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            Search: {Data: \"\", ColumnName: this.props.Search? this.props.Search: \"Name\"},\n            Titles: Object.values(this.props.Table.Title).map(el => {\n                el[\"Sort\"] = null;\n                return el;\n            }),\n            VisibilityList: false\n        }\n    }\n    \n\tcomponentDidMount(){\n        this.props.Get();\n        /*\n        if(this.props.Table.Content.length === 0){\n            this.props.Get();\n        };\n        */\n\t};\n    //Изменение строки, по которой ведется поиск\n    ChangeSearchData = (e) => {\n        this.setState({\n            Search: {Data: e.currentTarget.value, ColumnName: this.state.Search.ColumnName}\n        })\n    }\n    //фильтрация контента, по строке поиска\n    ContentFilter = (Content) => {\n        let ContentFilter = Content.filter((el)=>{\n            if(el[this.state.Search.ColumnName].indexOf(this.state.Search.Data) >= 0){\n                return true;\n            }else{\n                return false;\n            }\n        });\n        return ContentFilter;\n    }\n    \n    //Изменение видимости списка, видимых столбцов \n    ChangeVisibilityList = () => {\n        this.setState({\n            VisibilityList: !this.state.VisibilityList\n        })\n    }\n    //Изменение списка, показываемых столбцов\n    ChangeVisibilityColumn = (ind) => {\n        let TempArr = this.state.Titles;\n        if(TempArr[ind].Visibility){\n            TempArr[ind].Visibility = false;\n        }else{\n            TempArr[ind].Visibility = true;\n        };\n        this.setState({\n            Titles: TempArr\n        });\n    }\n\trender(){\n\t\treturn (\n\t\t\t<div className={s.TableContent} style={{minHeight: window.innerHeight}}>\n\t\t\t\t<div className={s.Head}>\n\t\t\t\t\t<div className={s.Title}>{this.props.Title}</div>\n                    <div className={s.ToolsBal}>\n                        <div className={s.Tool}>\n                            <span \n                                onClick={() => this.ChangeVisibilityList()} \n                                style={this.state.VisibilityList?{backgroundColor: \"#FFB629\", color: \"#FFFFFF\"}:null}>Столбцы</span>\n                            {this.state.VisibilityList?\n                            (<div className={s.VisibilityList}>\n                                <div style={{margin: \"10px\"}}>Отображать столбцы</div>\n                                {this.state.Titles.map((el, ind) => {\n                                    return (\n                                        <label key={ind}>\n                                            <input onClick={() => this.ChangeVisibilityColumn(ind)} type=\"checkbox\" defaultChecked={el.Visibility? true: false}/>\n                                            {el.Name}\n                                        </label>\n                                    )\n                                })}\n                            </div>): null}\n                        </div>\n                        <div className={s.Tool}>\n                          <span \n                            onClick={() => this.props.ExportTable(document.getElementsByClassName(\"ExportTable\")[0].cloneNode(true))\n                            }>Экспорт</span>\n                        </div>\n                    </div>\n                    {this.props.Table.Config.Add? \n                        <Link to={this.props.location.pathname + \"/Add\"}><div className={s.AddButton}>Добавить</div></Link>: null\n                    }\n\t\t\t\t</div>\n                <div className={s.Content}>\n                    <div className={s.Search}>\n                        <img src=\"/Assets/Icons/TableContent/Search.svg\"/>\n                        <input type=\"search\" onChange={this.ChangeSearchData} placeholder={\"Быстрый поиск\"}/>\n                    </div>\n                    <div className={s.Table}>\n                        <Table\n                            Titles={this.state.Titles.filter(el =>  {return el.Visibility? 1: 0;})} \n                            Content={this.ContentFilter(this.props.Table.Content)}\n                            Composition={this.props.Table.Composition}\n                            Config={this.props.Table.Config}\n                            Change={this.props.Change}\n                            Del={this.props.Del}\n                            history={this.props.history}/>\n                    </div>\n                </div>\n\t\t\t</div>\n\t\t)\n\t}\n};\n\nexport default withRouter(TableContent);\n","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport s from './ManagerContent.module.css';\nimport {withRouter} from 'react-router-dom';\n\nimport InputForm from './InputForm/InputForm';\nimport TableContent from './TableContent/TableContent';\n\nconst Content = (props) => {\n  return (\n\t<div className={s.ManagerContent}>\n    <Route exact  path={props.path} render={() => \n      <TableContent \n        Title={props.Name}\n\t\t\t\tTable={props.data.Table}\n        Search={props.Search}\n        Get={() => props.dispatch(props.methods.ThunkCreator.Get())}\n        Change={(data) => props.dispatch(props.methods.actionCreator.setInitialValues(data))}\n\t\t\t\tDel={(data) => props.dispatch(props.methods.ThunkCreator.Del(data))}\n      />\n    } />\n    <Route exact path={`${props.path}/Add`} render={() => \n      <InputForm\n        Title={\"Добавление\"}\n        TextSubmit={\"Добавить\"}\n        goBack={()=>{props.history.goBack();}}\n      \n        form={props.formName}\n        initialValues={null}\n      \n        InputForm={props.data.InputForm}\n        onSubmit={(Data) => props.dispatch(props.methods.ThunkCreator.Add(Data))}\n      />\n    } />\n    <Route exact path={`${props.path}/Change`} render={() => \n      <InputForm\n        Title={\"Изменение\"}\n        TextSubmit={\"Изменить\"}\n        goBack={()=>{props.history.goBack();}}\n      \n        form={props.formName}\n        initialValues={props.data.InputForm.initialValues}\n      \n        InputForm={props.data.InputForm}\n        onSubmit={(Data) => props.dispatch(props.methods.ThunkCreator.Change(Data))}\n      />\n    } />\n\t</div>\n  );\n}\n\nexport default withRouter(Content);","import * as axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: '/api',\n    headers: {'authorization': sessionStorage.getItem(\"Token\")}\n  })\n\nconst Get = (Url, data) => instance.get(Url, data)\n  .then((response) => {\n    return response.data;\n  }).catch(error => {\n    alert(\"Ошибка. Нет связи с сервером. Проверте соединение с сервером или обратитесь к администратору.\");\n    window.location = \"/\";\n  });\n\nconst Post = (Url, data) => instance.post(Url, data)\n  .then((response) => {\n    return response.data;\n  }).catch(error => {\n    alert(\"Ошибка. Нет связи с сервером. Проверте соединение с сервером или обратитесь к администратору.\");\n    window.location = \"/\";\n  });\n\nconst Patch = (Url, data) => instance.patch(Url, data)\n  .then((response) => {\n    return response.data;\n  }).catch(error => {\n    alert(\"Ошибка. Нет связи с сервером. Проверте соединение с сервером или обратитесь к администратору.\");\n    window.location = \"/\";\n  });\n    \nconst Delete = (Url, data) => instance.delete(Url, { data: data })\n  .then((response) => {\n    return response.data;\n  }).catch(error => {\n    alert(\"Ошибка. Нет связи с сервером. Проверте соединение с сервером или обратитесь к администратору.\");\n    window.location = \"/\";\n  });\n\n\nexport const Branches = {\n  Get: (data) => Get(\"/Branch\", data),\n  Insert: (data) => Post(\"/Branch\", data),\n  Change: (data) => Patch(\"/Branch\", data),\n  Delete: (data) => Delete(\"/Branch\", data)\n}\nexport const Additives = {\n  Get: (data) => Get(\"/Additive\", data),\n  Insert: (data) => Post(\"/Additive\", data),\n  Change: (data) => Patch(\"/Additive\", data),\n  Delete: (data) => Delete(\"/Additive\", data)\n}\nexport const Products = {\n  Get: (data) => Get(\"/Product\", data),\n  Insert: (data) => Post(\"/Product\", data),\n  Change: (data) => Patch(\"/Product\", data),\n  Delete: (data) => Delete(\"/Product\", data)\n}\nexport const Options = {\n  Get: (data) => Get(\"/ProductOption\", data),\n  Insert: (data) => Post(\"/ProductOption\", data),\n  Change: (data) => Patch(\"/ProductOption\", data),\n  Delete: (data) => Delete(\"/ProductOption\", data)\n}\nexport const Category = {\n  Get: (data) => Get(\"/Category\", data),\n  Insert: (data) => Post(\"/Category\", data),\n  Change: (data) => Patch(\"/Category\", data),\n  Delete: (data) => Delete(\"/Category\", data)\n}\nexport const Stocks = {\n  Get: (data) => Get(\"/Stock\", data),\n  Insert: (data) => Post(\"/Stock\", data),\n  Change: (data) => Patch(\"/Stock\", data),\n  Delete: (data) => Delete(\"/Stock\", data)\n}\nexport const User = {\n  Get: (data) => Get(\"/User\", data),\n  Insert: (data) => Post(\"/User\", data),\n  Change: (data) => Patch(\"/User\", data),\n  Delete: (data) => Delete(\"/User\", data)\n}\nexport const Levels = {\n  Get: (data) => Get(\"/Level\", data),\n  Insert: (data) => Post(\"/Level\", data),\n  Change: (data) => Patch(\"/Level\", data),\n  Delete: (data) => Delete(\"/Level\", data)\n}\nexport const Comments = {\n  Get: (data) => Get(\"/Comment\", data),\n  Insert: (data) => Post(\"/Comment\", data),\n  Change: (data) => Patch(\"/Comment\", data),\n  Delete: (data) => Delete(\"/Comment\", data)\n}\nexport const Contacts = {\n  Get: (data) => Get(\"/Contact\", data),\n  Insert: (data) => Post(\"/Contact\", data),\n  Change: (data) => Patch(\"/Contact\", data),\n  Delete: (data) => Delete(\"/Contact\", data)\n}\nexport const Cooperations = {\n  Get: (data) => Get(\"/Cooperation\", data),\n  Insert: (data) => Post(\"/Cooperation\", data),\n  Change: (data) => Patch(\"/Cooperation\", data),\n  Delete: (data) => Delete(\"/Cooperation\", data)\n}\n","//Валидация\nexport const required = value => (value || typeof value === 'number' ? undefined : 'Обязательный')\nexport const min5 = value => (value.length < 5 ? undefined : 'Надо меньше 5')\nexport const phone = value => value.slice(3).replace(/[^\\d]/g, '').length < 10?  \"Номер введен не полностью\": undefined\n","import {Products as Api} from '../../api/api.js';\nimport {NotificationsAC} from '../NotificationsReducer.js';\nimport {required} from '../Validates.js'\n\nlet initialState = {\n  InputForm: {\n    initialValues: {},\n    FormMainItems: [\n      {\n        ItemName: \"Name\",\n        Explanations: \"Название\",\n        Type: \"Text\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Description\",\n        Explanations: \"Описание\",\n        Type: \"TextArea\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Image\",\n        Explanations: \"Изображение\",\n        Type: \"File\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"IdCategory\",\n        Explanations: \"Категория\",\n        Type: \"Select\",\n        Options: [],\n        Validate: [required]\n      },\n      {\n        ItemName: \"Branches\",\n        Explanations: \"Отделения\",\n        Type: \"SelectMultiple\",\n        Options: [],\n        Validate: [required]\n      }\n    ]\n  },\n  Table:{\n    Title: [\n        {Name: \"Название\", ColumnName: \"Name\", Visibility: true},\n        {Name: \"Описание\", ColumnName: \"Description\", Visibility: true},\n        {Name: \"Категория\", ColumnName: \"CategoryName\", Visibility: true},\n        {Name: \"Изображение\", ColumnName: \"Image\", Visibility: true},\n        {Name: \"Отделения\", ColumnName: \"BranchesTable\", Visibility: true}\n    ],\n    Content: [\n    ],\n    Config: {\n        Add: true,\n        Details: false,\n        Change: true,\n        Delete: true\n    }\n  }\n};\n\nconst Reducer = (state = initialState, action) => {\n\t\n\tlet stateCopy = {...state};\n\t\n\tswitch (action.type) {\n    case \"SET_DATA_P\":{\n      stateCopy.InputForm.FormMainItems[3].Options = action.data.Category.map(el => {return {Key: el.Id, Data: el.Name}})\n      stateCopy.InputForm.FormMainItems[4].Options = action.data.Branches.map(el => {return {Key: el.Id, Data: el.Address}})\n\t\t\t\n      stateCopy.Table.Content = action.data.Products.map(el => {\n        return {\n          ...el, \n          Branches: action.data.BranchProducts.filter(elf => elf.IdProduct == el.Id).map(elm => elm.IdBranch), \n          BranchesTable: action.data.BranchProducts.filter(elf => elf.IdProduct == el.Id).map(elm => elm.Address).join(\"; \")\n        }\n      });\n\n      return stateCopy;\n\t\t}\n    case \"SET_INITIAL_VALUES_P\":{\n\n\t\t\tstateCopy.InputForm.initialValues = {...action.data, OldImage: action.data.Image};\n      return stateCopy;\n\t\t}\n\t\tdefault:{\n\t\t\treturn state;\n\t\t}\n\t}\n}\n\nexport const actionCreator = {\n  setData: (data) => {\n    return {type: \"SET_DATA_P\", data: data};\n  },\n  setInitialValues: (data) => {\n      return {type: \"SET_INITIAL_VALUES_P\", data: data};\n  }\n}\n\nexport const ThunkCreator = {\n  Get: () => {\n    return (dispatch) => {\n      Api.Get().then((data) => {\n        dispatch(actionCreator.setData(data.Data));\n      });\n    }\n  },\n  Add: (Data) => {\n    let form = new FormData()\n    form.append(\"Image\", Data.Image)\n    form.append(\"OldImage\", Data.OldImage)\n    form.append(\"Name\", Data.Name)\n    form.append(\"Description\", Data.Description)\n    form.append(\"IdCategory\", Data.IdCategory)\n    form.append(\"Branches\", JSON.stringify(Data.Branches))\n\n    return (dispatch) => {\n      Api.Insert(form).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Change: (Data) => {\n    let form = new FormData()\n    form.append(\"Id\", Data.Id)\n    form.append(\"Image\", Data.Image)\n    form.append(\"OldImage\", Data.OldImage)\n    form.append(\"Name\", Data.Name)\n    form.append(\"Description\", Data.Description)\n    form.append(\"IdCategory\", Data.IdCategory)\n    form.append(\"Branches\", JSON.stringify(Data.Branches))\n\n    return (dispatch) => {\n      Api.Change(form).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Del: (Data) => {\n\n    return (dispatch) => {\n      Api.Delete(Data).then((response) => {\n        if(!response.Error){\n          Api.Get().then((data) => {\n            dispatch(actionCreator.setData(data.Data));\n          });\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  }\n}\n\nexport default Reducer\n\n","import {Options as Api} from '../../api/api.js';\nimport {NotificationsAC} from '../NotificationsReducer.js';\nimport {required} from '../Validates.js'\n\nlet initialState = {\n  InputForm: {\n    initialValues: {},\n    FormMainItems: [\n      {\n        ItemName: \"IdProduct\",\n        Explanations: \"Продукт\",\n        Type: \"Select\",\n        Options: [],\n        Validate: [required]\n      },\n      {\n        ItemName: \"Name\",\n        Explanations: \"Вариант\",\n        Type: \"Text\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Weight\",\n        Explanations: \"Вес\",\n        Type: \"Number\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Size\",\n        Explanations: \"Размер\",\n        Type: \"Number\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Price\",\n        Explanations: \"Цена\",\n        Type: \"Number\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Additive\",\n        Explanations: \"Количество добавок\",\n        Type: \"Number\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Additives\",\n        Explanations: \"Доступные добавки\",\n        Type: \"SelectMultiple\",\n        Options: [],\n        Validate: [required]\n      }\n    ]\n  },\n  Table:{\n    Title: [\n        {Name: \"Продукт\", ColumnName: \"Product\", Visibility: true},\n        {Name: \"Вариант\", ColumnName: \"Name\", Visibility: true},\n        {Name: \"Вес\", ColumnName: \"Weight\", Visibility: true},\n        {Name: \"Размер\", ColumnName: \"Size\", Visibility: true},\n        {Name: \"Цена\", ColumnName: \"Price\", Visibility: true},\n        {Name: \"Количестов добавок\", ColumnName: \"Additive\", Visibility: true},\n        {Name: \"Добавки\", ColumnName: \"AdditivesTable\", Visibility: true}\n    ],\n    Content: [\n    ],\n    Config: {\n        Add: true,\n        Details: false,\n        Change: true,\n        Delete: true\n    }\n  }\n};\n\nconst Reducer = (state = initialState, action) => {\n\t\n\tlet stateCopy = {...state};\n\t\n\tswitch (action.type) {\n    case \"SET_DATA_O\":{\n      stateCopy.InputForm.FormMainItems[0].Options = action.data.Products.map(el => {return {Key: el.Id, Data: el.Name}})\n\t\t\tstateCopy.InputForm.FormMainItems[6].Options = action.data.Additives.map(el => {return {Key: el.Id, Data: el.Name}})\n\t\t\t\n      stateCopy.Table.Content = action.data.ProductOption.map(el => {\n        return {\n          ...el, \n          Additives: action.data.ListAdditives.filter(elf => elf.IdProductOption == el.Id).map(elm => elm.IdAdditive), \n          AdditivesTable: action.data.ListAdditives.filter(elf => elf.IdProductOption == el.Id).map(elm => elm.AdditiveName).join(\"; \")\n        }\n      });\n\n      return stateCopy;\n\t\t}\n    case \"SET_INITIAL_VALUES_O\":{\n\n\t\t\tstateCopy.InputForm.initialValues = {...action.data};\n      return stateCopy;\n\t\t}\n\t\tdefault:{\n\t\t\treturn state;\n\t\t}\n\t}\n}\n\nexport const actionCreator = {\n  setData: (data) => {\n    return {type: \"SET_DATA_O\", data: data};\n  },\n  setInitialValues: (data) => {\n      return {type: \"SET_INITIAL_VALUES_O\", data: data};\n  }\n}\n\nexport const ThunkCreator = {\n  Get: () => {\n    return (dispatch) => {\n      Api.Get().then((data) => {\n        dispatch(actionCreator.setData(data.Data));\n      });\n    }\n  },\n  Add: (Data) => {\n    return (dispatch) => {\n      Api.Insert(Data).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Change: (Data) => {\n    return (dispatch) => {\n      Api.Change(Data).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Del: (Data) => {\n    return (dispatch) => {\n      Api.Delete(Data).then((response) => {\n        if(!response.Error){\n          Api.Get().then((data) => {\n            dispatch(actionCreator.setData(data.Data));\n          });\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  }\n}\n\nexport default Reducer\n\n","import {Additives as Api} from '../../api/api.js';\nimport {NotificationsAC} from '../NotificationsReducer.js';\nimport {required} from '../Validates.js'\n\nlet initialState = {\n  InputForm: {\n    initialValues: {},\n    FormMainItems: [\n      {\n        ItemName: \"Name\",\n        Explanations: \"Название\",\n        Type: \"Text\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Image\",\n        Explanations: \"Изображение\",\n        Type: \"File\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Weight\",\n        Explanations: \"Вес\",\n        Type: \"Number\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Price\",\n        Explanations: \"Цена\",\n        Type: \"Number\",\n        Validate: [required]\n      }\n    ]\n  },\n  Table:{\n    Title: [\n      {Name: \"Название\", ColumnName: \"Name\", Visibility: true},\n      {Name: \"Изображение\", ColumnName: \"Image\", Visibility: true},\n      {Name: \"Вес\", ColumnName: \"Weight\", Visibility: true},\n      {Name: \"Цена\", ColumnName: \"Price\", Visibility: true}\n    ],\n    Content: [\n      ],\n    Config: {\n      Add: true,\n      Details: false,\n      Change: true,\n      Delete: true\n    }\n  }\n};\n\nconst Reducer = (state = initialState, action) => {\n\t\n\tlet stateCopy = {...state};\n\t\n\tswitch (action.type) {\n    case \"SET_DATA_A\":{\n\t\t\tstateCopy.Table.Content = action.data;\n      return stateCopy;\n\t\t}\n    case \"SET_INITIAL_VALUES_A\":{\n\t\t\tstateCopy.InputForm.initialValues = {...action.data, OldImage: action.data.Image};\n      return stateCopy;\n\t\t}\n\t\tdefault:{\n\t\t\treturn state;\n\t\t}\n\t}\n}\n\nexport const actionCreator = {\n  setData: (data) => {\n    return {type: \"SET_DATA_A\", data: data};\n  },\n  setInitialValues: (data) => {\n      return {type: \"SET_INITIAL_VALUES_A\", data: data};\n  }\n}\n\nexport const ThunkCreator = {\n  Get: () => {\n    return (dispatch) => {\n      Api.Get().then((data) => {\n        dispatch(actionCreator.setData(data.Data));\n      });\n    }\n  },\n  Add: (Data) => {\n    let form = new FormData()\n    form.append(\"Image\", Data.Image)\n    form.append(\"Name\", Data.Name)\n    form.append(\"Weight\", Data.Weight)\n    form.append(\"Price\", Data.Price)\n\n    return (dispatch) => {\n      Api.Insert(form).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Change: (Data) => {\n    let form = new FormData()\n    form.append(\"Id\", Data.Id)\n    form.append(\"Image\", Data.Image)\n    form.append(\"OldImage\", Data.OldImage)\n    form.append(\"Name\", Data.Name)\n    form.append(\"Weight\", Data.Weight)\n    form.append(\"Price\", Data.Price)\n\n    return (dispatch) => {\n      Api.Change(form).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Del: (Data) => {\n    return (dispatch) => {\n      Api.Delete(Data).then((response) => {\n        if(!response.Error){\n          Api.Get().then((data) => {\n            dispatch(actionCreator.setData(data.Data));\n          });\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  }\n}\n\nexport default Reducer\n\n","import {Category as Api} from '../../api/api.js';\nimport {NotificationsAC} from '../NotificationsReducer.js';\nimport {required} from '../Validates.js'\n\nlet initialState = {\n  InputForm: {\n    initialValues: {},\n    FormMainItems: [\n      {\n        ItemName: \"Name\",\n        Explanations: \"Название\",\n        Type: \"Text\",\n        Validate: [required]\n      }\n    ]\n  },\n  Table:{\n    Title: [\n      {Name: \"Название\", ColumnName: \"Name\", Visibility: true}\n    ],\n    Content: [\n      ],\n    Config: {\n      Add: true,\n      Details: false,\n      Change: true,\n      Delete: true\n    }\n  }\n};\n\nconst Reducer = (state = initialState, action) => {\n\t\n\tlet stateCopy = {...state};\n\t\n\tswitch (action.type) {\n    case \"SET_DATA_CAT\":{\n\t\t\tstateCopy.Table.Content = action.data;\n      return stateCopy;\n\t\t}\n    case \"SET_INITIAL_VALUES_CAT\":{\n\t\t\tstateCopy.InputForm.initialValues = {...action.data};\n      return stateCopy;\n\t\t}\n\t\tdefault:{\n\t\t\treturn state;\n\t\t}\n\t}\n}\n\nexport const actionCreator = {\n  setData: (data) => {\n    return {type: \"SET_DATA_CAT\", data: data};\n  },\n  setInitialValues: (data) => {\n      return {type: \"SET_INITIAL_VALUES_CAT\", data: data};\n  }\n}\n\nexport const ThunkCreator = {\n  Get: () => {\n    return (dispatch) => {\n      Api.Get().then((data) => {\n        dispatch(actionCreator.setData(data.Data));\n      });\n    }\n  },\n  Add: (Data) => {\n    return (dispatch) => {\n      Api.Insert(Data).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Change: (Data) => {\n    return (dispatch) => {\n      Api.Change(Data).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Del: (Data) => {\n\n    return (dispatch) => {\n      Api.Delete(Data).then((response) => {\n        if(!response.Error){\n          Api.Get().then((data) => {\n            dispatch(actionCreator.setData(data.Data));\n          });\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  }\n}\n\nexport default Reducer\n\n","import {Stocks as Api} from '../../api/api.js';\nimport {NotificationsAC} from '../NotificationsReducer.js';\nimport {required} from '../Validates.js'\n\nlet initialState = {\n  InputForm: {\n    initialValues: {},\n    FormMainItems: [\n      {\n        ItemName: \"Name\",\n        Explanations: \"Название\",\n        Type: \"Text\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"DateBegin\",\n        Explanations: \"Начало работа\",\n        Type: \"Number\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"DateEnd\",\n        Explanations: \"Конец работы\",\n        Type: \"Number\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Image\",\n        Explanations: \"Изображение\",\n        Type: \"File\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"PromoCode\",\n        Explanations: \"Промокод\",\n        Type: \"Text\",\n        Validate: [required]\n      }\n    ]\n  },\n  Table:{\n    Title: [\n      {Name: \"Название\", ColumnName: \"Name\", Visibility: true},\n      {Name: \"Начало работа\", ColumnName: \"DateEnd\", Visibility: true},\n      {Name: \"Конец работы\", ColumnName: \"DateEnd\", Visibility: true},\n      {Name: \"Изображение\", ColumnName: \"Image\", Visibility: true},\n      {Name: \"Промокод\", ColumnName: \"PromoCode\", Visibility: true}\n    ],\n    Content: [\n      ],\n    Config: {\n      Add: true,\n      Details: false,\n      Change: true,\n      Delete: true\n    }\n  }\n};\n\nconst Reducer = (state = initialState, action) => {\n\t\n\tlet stateCopy = {...state};\n\t\n\tswitch (action.type) {\n    case \"SET_DATA_STOCK\":{\n\t\t\tstateCopy.Table.Content = action.data;\n      return stateCopy;\n\t\t}\n    case \"SET_INITIAL_VALUES_STOCK\":{\n\t\t\tstateCopy.InputForm.initialValues = {...action.data, OldImage: action.data.Image};\n      return stateCopy;\n\t\t}\n\t\tdefault:{\n\t\t\treturn state;\n\t\t}\n\t}\n}\n\nexport const actionCreator = {\n  setData: (data) => {\n    return {type: \"SET_DATA_STOCK\", data: data};\n  },\n  setInitialValues: (data) => {\n      return {type: \"SET_INITIAL_VALUES_STOCK\", data: data};\n  }\n}\n\nexport const ThunkCreator = {\n  Get: () => {\n    return (dispatch) => {\n      Api.Get().then((data) => {\n        dispatch(actionCreator.setData(data.Data));\n      });\n    }\n  },\n  Add: (Data) => {\n    let form = new FormData()\n    form.append(\"Image\", Data.Image)\n    form.append(\"OldImage\", Data.OldImage)\n    form.append(\"Name\", Data.Name)\n    form.append(\"DateBegin\", Data.DateBegin)\n    form.append(\"DateEnd\", Data.DateEnd)\n    form.append(\"PromoCode\", Data.PromoCode)\n\n    return (dispatch) => {\n      Api.Insert(form).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Change: (Data) => {\n    let form = new FormData()\n    form.append(\"Id\", Data.Id)\n    form.append(\"Image\", Data.Image)\n    form.append(\"OldImage\", Data.OldImage)\n    form.append(\"Name\", Data.Name)\n    form.append(\"DateBegin\", Data.DateBegin)\n    form.append(\"DateEnd\", Data.DateEnd)\n    form.append(\"PromoCode\", Data.PromoCode)\n\n    return (dispatch) => {\n      Api.Change(form).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Del: (Data) => {\n    return (dispatch) => {\n      Api.Delete(Data).then((response) => {\n        if(!response.Error){\n          Api.Get().then((data) => {\n            dispatch(actionCreator.setData(data.Data));\n          });\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  }\n}\n\nexport default Reducer\n\n","import {User as Api} from '../../api/api.js';\nimport {NotificationsAC} from '../NotificationsReducer.js';\nimport {required} from '../Validates.js'\n\nlet initialState = {\n  InputForm: {\n    initialValues: {},\n    FormMainItems: [\n      {\n        ItemName: \"Name\",\n        Explanations: \"Название\",\n        Type: \"Text\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Phone\",\n        Explanations: \"Телефон\",\n        Type: \"Phone\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Password\",\n        Explanations: \"Пароль\",\n        Type: \"Password\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Points\",\n        Explanations: \"Баланс\",\n        Type: \"Number\",\n        Validate: [required]\n      }\n    ]\n  },\n  Table:{\n    Title: [\n      {Name: \"Название\", ColumnName: \"Name\", Visibility: true},\n      {Name: \"Телефон\", ColumnName: \"Phone\", Visibility: true},\n      {Name: \"Уровень\", ColumnName: \"LevelName\", Visibility: true},\n      {Name: \"Кешбэк\", ColumnName: \"Сashback\", Visibility: true},\n      {Name: \"Баланс\", ColumnName: \"Points\", Visibility: true}\n    ],\n    Content: [\n      ],\n    Config: {\n      Add: true,\n      Details: false,\n      Change: true,\n      Delete: true\n    }\n  }\n};\n\nconst Reducer = (state = initialState, action) => {\n\t\n\tlet stateCopy = {...state};\n\t\n\tswitch (action.type) {\n    case \"SET_DATA_User\":{\n\t\t\tstateCopy.Table.Content = action.data.Users;\n      return stateCopy;\n\t\t}\n    case \"SET_INITIAL_VALUES_User\":{\n\t\t\tstateCopy.InputForm.initialValues = {...action.data};\n      return stateCopy;\n\t\t}\n\t\tdefault:{\n\t\t\treturn state;\n\t\t}\n\t}\n}\n\nexport const actionCreator = {\n  setData: (data) => {\n    return {type: \"SET_DATA_User\", data: data};\n  },\n  setInitialValues: (data) => {\n      return {type: \"SET_INITIAL_VALUES_User\", data: data};\n  }\n}\n\nexport const ThunkCreator = {\n  Get: () => {\n    return (dispatch) => {\n      Api.Get().then((data) => {\n        dispatch(actionCreator.setData(data.Data));\n      });\n    }\n  },\n  Add: (Data) => {\n    let temp = {...Data, Addresses: [], IdRole: 2, IdLevel: null}\n    return (dispatch) => {\n      Api.Insert(temp).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Change: (Data) => {\n    let temp = {...Data, Addresses: [], IdRole: null, IdLevel: null}\n    return (dispatch) => {\n      Api.Change(temp).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Del: (Data) => {\n    console.log(Data)\n    return (dispatch) => {\n      Api.Delete(Data).then((response) => {\n        if(!response.Error){\n          Api.Get().then((data) => {\n            dispatch(actionCreator.setData(data.Data));\n          });\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  }\n}\n\nexport default Reducer\n\n","import {Cooperations as Api} from '../../api/api.js';\nimport {NotificationsAC} from '../NotificationsReducer.js';\nimport {required} from '../Validates.js'\n\nlet initialState = {\n  InputForm: {\n    initialValues: {},\n    FormMainItems: [\n      {\n        ItemName: \"Link\",\n        Explanations: \"Ссылка\",\n        Type: \"Text\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Image\",\n        Explanations: \"Изображение\",\n        Type: \"File\",\n        Validate: [required]\n      }\n    ]\n  },\n  Table:{\n    Title: [\n      {Name: \"Ссылка\", ColumnName: \"Link\", Visibility: true},\n      {Name: \"Изображение\", ColumnName: \"Image\", Visibility: true}\n    ],\n    Content: [\n      ],\n    Config: {\n      Add: true,\n      Details: false,\n      Change: true,\n      Delete: true\n    }\n  }\n};\n\nconst Reducer = (state = initialState, action) => {\n\t\n\tlet stateCopy = {...state};\n\t\n\tswitch (action.type) {\n    case \"SET_DATA_COOP\":{\n\t\t\tstateCopy.Table.Content = action.data;\n      return stateCopy;\n\t\t}\n    case \"SET_INITIAL_VALUES_COOP\":{\n\t\t\tstateCopy.InputForm.initialValues = {...action.data, OldImage: action.data.Image};\n      return stateCopy;\n\t\t}\n\t\tdefault:{\n\t\t\treturn state;\n\t\t}\n\t}\n}\n\nexport const actionCreator = {\n  setData: (data) => {\n    return {type: \"SET_DATA_COOP\", data: data};\n  },\n  setInitialValues: (data) => {\n      return {type: \"SET_INITIAL_VALUES_COOP\", data: data};\n  }\n}\n\nexport const ThunkCreator = {\n  Get: () => {\n    return (dispatch) => {\n      Api.Get().then((data) => {\n        dispatch(actionCreator.setData(data.Data));\n      });\n    }\n  },\n  Add: (Data) => {\n    let form = new FormData()\n    form.append(\"Image\", Data.Image)\n    form.append(\"Link\", Data.Link)\n\n    return (dispatch) => {\n      Api.Insert(form).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Change: (Data) => {\n    let form = new FormData()\n    form.append(\"Id\", Data.Id)\n    form.append(\"Image\", Data.Image)\n    form.append(\"OldImage\", Data.OldImage)\n    form.append(\"Link\", Data.Link)\n\n    return (dispatch) => {\n      Api.Change(form).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Del: (Data) => {\n    return (dispatch) => {\n      Api.Delete(Data).then((response) => {\n        if(!response.Error){\n          Api.Get().then((data) => {\n            dispatch(actionCreator.setData(data.Data));\n          });\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  }\n}\n\nexport default Reducer\n\n","import {Contacts as Api} from '../../api/api.js';\nimport {NotificationsAC} from '../NotificationsReducer.js';\nimport {required} from '../Validates.js'\n\nlet initialState = {\n  InputForm: {\n    initialValues: {},\n    FormMainItems: [\n      {\n        ItemName: \"Text\",\n        Explanations: \"Текст\",\n        Type: \"Text\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Image\",\n        Explanations: \"Изображение\",\n        Type: \"File\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Link\",\n        Explanations: \"Ссылка\",\n        Type: \"Text\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Description\",\n        Explanations: \"Описание\",\n        Type: \"TextArea\",\n        Validate: [required]\n      }\n    ]\n  },\n  Table:{\n    Title: [\n      {Name: \"Текст\", ColumnName: \"Text\", Visibility: true},\n      {Name: \"Изображение\", ColumnName: \"Icon\", Visibility: true},\n      {Name: \"Ссылка\", ColumnName: \"Link\", Visibility: true},\n      {Name: \"Описание\", ColumnName: \"Description\", Visibility: true}\n    ],\n    Content: [\n      ],\n    Config: {\n      Add: true,\n      Details: false,\n      Change: true,\n      Delete: true\n    }\n  }\n};\n\nconst Reducer = (state = initialState, action) => {\n\t\n\tlet stateCopy = {...state};\n\t\n\tswitch (action.type) {\n    case \"SET_DATA_CON\":{\n\t\t\tstateCopy.Table.Content = action.data;\n      return stateCopy;\n\t\t}\n    case \"SET_INITIAL_VALUES_CON\":{\n\t\t\tstateCopy.InputForm.initialValues = {...action.data, OldImage: action.data.Image};\n      return stateCopy;\n\t\t}\n\t\tdefault:{\n\t\t\treturn state;\n\t\t}\n\t}\n}\n\nexport const actionCreator = {\n  setData: (data) => {\n    return {type: \"SET_DATA_CON\", data: data};\n  },\n  setInitialValues: (data) => {\n      return {type: \"SET_INITIAL_VALUES_CON\", data: data};\n  }\n}\n\nexport const ThunkCreator = {\n  Get: () => {\n    return (dispatch) => {\n      Api.Get().then((data) => {\n        dispatch(actionCreator.setData(data.Data));\n      });\n    }\n  },\n  Add: (Data) => {\n    let form = new FormData()\n    form.append(\"Image\", Data.Image)\n    form.append(\"Text\", Data.Text)\n    form.append(\"Link\", Data.Link)\n    form.append(\"Description\", Data.Description)\n\n    return (dispatch) => {\n      Api.Insert(form).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Change: (Data) => {\n    let form = new FormData()\n    form.append(\"Id\", Data.Id)\n    form.append(\"Image\", Data.Image)\n    form.append(\"OldImage\", Data.OldImage)\n    form.append(\"Text\", Data.Text)\n    form.append(\"Link\", Data.Link)\n    form.append(\"Description\", Data.Description)\n\n    return (dispatch) => {\n      Api.Change(form).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Del: (Data) => {\n    return (dispatch) => {\n      Api.Delete(Data).then((response) => {\n        if(!response.Error){\n          Api.Get().then((data) => {\n            dispatch(actionCreator.setData(data.Data));\n          });\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  }\n}\n\nexport default Reducer\n\n","import {Comments as Api} from '../../api/api.js';\nimport {NotificationsAC} from '../NotificationsReducer.js';\nimport {required} from '../Validates.js'\n\nlet initialState = {\n  InputForm: {\n    initialValues: {},\n    FormMainItems: [\n      {\n        ItemName: \"Date\",\n        Explanations: \"Дата\",\n        Type: \"Date\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Image\",\n        Explanations: \"Изображение\",\n        Type: \"File\",\n        Validate: [required]\n      }\n    ]\n  },\n  Table:{\n    Title: [\n      {Name: \"Дата\", ColumnName: \"Date\", Visibility: true},\n      {Name: \"Изображение\", ColumnName: \"Image\", Visibility: true}\n    ],\n    Content: [\n      ],\n    Config: {\n      Add: true,\n      Details: false,\n      Change: true,\n      Delete: true\n    }\n  }\n};\n\nconst Reducer = (state = initialState, action) => {\n\t\n\tlet stateCopy = {...state};\n\t\n\tswitch (action.type) {\n    case \"SET_DATA_COM\":{\n\t\t\tstateCopy.Table.Content = action.data;\n      return stateCopy;\n\t\t}\n    case \"SET_INITIAL_VALUES_COM\":{\n\t\t\tstateCopy.InputForm.initialValues = {...action.data, OldImage: action.data.Image};\n      return stateCopy;\n\t\t}\n\t\tdefault:{\n\t\t\treturn state;\n\t\t}\n\t}\n}\n\nexport const actionCreator = {\n  setData: (data) => {\n    return {type: \"SET_DATA_COM\", data: data};\n  },\n  setInitialValues: (data) => {\n      return {type: \"SET_INITIAL_VALUES_COM\", data: data};\n  }\n}\n\nexport const ThunkCreator = {\n  Get: () => {\n    return (dispatch) => {\n      Api.Get().then((data) => {\n        dispatch(actionCreator.setData(data.Data));\n      });\n    }\n  },\n  Add: (Data) => {\n    let form = new FormData()\n    form.append(\"Image\", Data.Image)\n    form.append(\"Date\", Data.Date)\n\n    return (dispatch) => {\n      Api.Insert(form).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Change: (Data) => {\n    let form = new FormData()\n    form.append(\"Id\", Data.Id)\n    form.append(\"Image\", Data.Image)\n    form.append(\"OldImage\", Data.OldImage)\n    form.append(\"Date\", Data.Date)\n\n    return (dispatch) => {\n      Api.Change(form).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Del: (Data) => {\n    return (dispatch) => {\n      Api.Delete(Data).then((response) => {\n        if(!response.Error){\n          Api.Get().then((data) => {\n            dispatch(actionCreator.setData(data.Data));\n          });\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  }\n}\n\nexport default Reducer\n\n","import {Levels as Api} from '../../api/api.js';\nimport {NotificationsAC} from '../NotificationsReducer.js';\nimport {required} from '../Validates.js'\n\nlet initialState = {\n  InputForm: {\n    initialValues: {},\n    FormMainItems: [\n      {\n        ItemName: \"Name\",\n        Explanations: \"Название\",\n        Type: \"Text\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Сashback\",\n        Explanations: \"Процент кешбэка\",\n        Type: \"Number\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Border\",\n        Explanations: \"Граница перехода\",\n        Type: \"Number\",\n        Validate: [required]\n      }\n    ]\n  },\n  Table:{\n    Title: [\n      {Name: \"Название\", ColumnName: \"Name\", Visibility: true},\n      {Name: \"Процент кешбэка\", ColumnName: \"Сashback\", Visibility: true},\n      {Name: \"Граница перехода\", ColumnName: \"Border\", Visibility: true}\n    ],\n    Content: [\n      ],\n    Config: {\n      Add: true,\n      Details: false,\n      Change: true,\n      Delete: true\n    }\n  }\n};\n\nconst Reducer = (state = initialState, action) => {\n\t\n\tlet stateCopy = {...state};\n\t\n\tswitch (action.type) {\n    case \"SET_DATA_LEVEL\":{\n\t\t\tstateCopy.Table.Content = action.data;\n      return stateCopy;\n\t\t}\n    case \"SET_INITIAL_VALUES_LEVEL\":{\n\t\t\tstateCopy.InputForm.initialValues = {...action.data};\n      return stateCopy;\n\t\t}\n\t\tdefault:{\n\t\t\treturn state;\n\t\t}\n\t}\n}\n\nexport const actionCreator = {\n  setData: (data) => {\n    return {type: \"SET_DATA_LEVEL\", data: data};\n  },\n  setInitialValues: (data) => {\n      return {type: \"SET_INITIAL_VALUES_LEVEL\", data: data};\n  }\n}\n\nexport const ThunkCreator = {\n  Get: () => {\n    return (dispatch) => {\n      Api.Get().then((data) => {\n        dispatch(actionCreator.setData(data.Data));\n      });\n    }\n  },\n  Add: (Data) => {\n    return (dispatch) => {\n      Api.Insert(Data).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Change: (Data) => {\n    return (dispatch) => {\n      Api.Change(Data).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Del: (Data) => {\n\n    return (dispatch) => {\n      Api.Delete(Data).then((response) => {\n        if(!response.Error){\n          Api.Get().then((data) => {\n            dispatch(actionCreator.setData(data.Data));\n          });\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  }\n}\n\nexport default Reducer\n\n","import {Branches as Api} from '../../api/api.js';\nimport {NotificationsAC} from '../NotificationsReducer.js';\nimport {required} from '../Validates.js'\n\nlet initialState = {\n  InputForm: {\n    initialValues: {},\n    FormMainItems: [\n      {\n        ItemName: \"Address\",\n        Explanations: \"Адрес\",\n        Type: \"Text\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"DeliveryArea\",\n        Explanations: \"Площадь покрытия\",\n        Type: \"Text\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"Begin\",\n        Explanations: \"Начало работы (час)\",\n        Type: \"Number\",\n        Validate: [required]\n      },\n      {\n        ItemName: \"End\",\n        Explanations: \"Конец работы (час)\",\n        Type: \"Number\",\n        Validate: [required]\n      },\n    ]\n  },\n  Table:{\n    Title: [\n      {Name: \"Адрес\", ColumnName: \"Address\", Visibility: true},\n      {Name: \"Площадь покрытия\", ColumnName: \"DeliveryArea\", Visibility: false},\n      {Name: \"Начало работы (час)\", ColumnName: \"Begin\", Visibility: true},\n      {Name: \"АдКонец работы (час)рес\", ColumnName: \"End\", Visibility: true}\n    ],\n    Content: [\n      ],\n    Config: {\n      Add: true,\n      Details: false,\n      Change: true,\n      Delete: true\n    }\n  }\n};\n\nconst Reducer = (state = initialState, action) => {\n\t\n\tlet stateCopy = {...state};\n\t\n\tswitch (action.type) {\n    case \"SET_DATA_B\":{\n\t\t\tstateCopy.Table.Content = action.data;\n      return stateCopy;\n\t\t}\n    case \"SET_INITIAL_VALUES_B\":{\n\t\t\tstateCopy.InputForm.initialValues = {...action.data};\n      return stateCopy;\n\t\t}\n\t\tdefault:{\n\t\t\treturn state;\n\t\t}\n\t}\n}\n\nexport const actionCreator = {\n  setData: (data) => {\n    return {type: \"SET_DATA_B\", data: data};\n  },\n  setInitialValues: (data) => {\n      return {type: \"SET_INITIAL_VALUES_B\", data: data};\n  }\n}\n\nexport const ThunkCreator = {\n  Get: () => {\n    return (dispatch) => {\n      Api.Get().then((data) => {\n        dispatch(actionCreator.setData(data.Data));\n      });\n    }\n  },\n  Add: (Data) => {\n    return (dispatch) => {\n      Api.Insert(Data).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Change: (Data) => {\n    return (dispatch) => {\n      Api.Change(Data).then((response) => {\n        if(!response.Error){\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  },\n  Del: (Data) => {\n\n    return (dispatch) => {\n      Api.Delete(Data).then((response) => {\n        if(!response.Error){\n          Api.Get().then((data) => {\n            dispatch(actionCreator.setData(data.Data));\n          });\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\n        }else{\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\n        }\n      });\n    }\n  }\n}\n\nexport default Reducer\n\n","import React from 'react';\nimport s from'./ManagerPanel.module.css';\nimport {Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\n\nimport NavBar from './NavBar/NavBar.jsx';\nimport Content from './Content.jsx';\n\nimport {actionCreator as PAC, ThunkCreator as PTC} from '../../redux/ManagerReducers/Products'\nimport {actionCreator as OAC, ThunkCreator as OTC} from '../../redux/ManagerReducers/Options'\nimport {actionCreator as AAC, ThunkCreator as ATC} from '../../redux/ManagerReducers/Additives'\nimport {actionCreator as CAC, ThunkCreator as CTC} from '../../redux/ManagerReducers/Category'\nimport {actionCreator as StocksAC, ThunkCreator as StocksTC} from '../../redux/ManagerReducers/Stocks'\n\nimport {actionCreator as UsersAC, ThunkCreator as UsersTC} from '../../redux/ManagerReducers/Users'\n\nimport {actionCreator as CooperationsAC, ThunkCreator as CooperationsTC} from '../../redux/ManagerReducers/Cooperations'\nimport {actionCreator as ContactsAC, ThunkCreator as ContactsTC} from '../../redux/ManagerReducers/Contacts'\nimport {actionCreator as CommentsAC, ThunkCreator as CommentsTC} from '../../redux/ManagerReducers/Comments'\nimport {actionCreator as LevelsAC, ThunkCreator as LevelsTC} from '../../redux/ManagerReducers/Levels'\n\nimport {actionCreator as BAC, ThunkCreator as BTC} from '../../redux/ManagerReducers/Branches'\n\nconst ManagerPanel = (props) => {\n  return (\n\t<div className={s.ManagerPanel}>\n\t\t<NavBar NavBar={props.NavBar}/>\n    <Route path=\"/Menu/Products\" render={() => \n      <Content \n        path=\"/Menu/Products\"\n        data={props.Products} \n        dispatch={props.dispatch} \n        methods={{actionCreator: PAC, ThunkCreator: PTC}} \n        formName={\"ProductForm\"} \n        Name={\"Товары\"}\n        Search={\"Name\"}\n      />}/>\n    <Route path=\"/Menu/Options\" render={() => \n      <Content \n        path=\"/Menu/Options\"\n        data={props.Options} \n        dispatch={props.dispatch} \n        methods={{actionCreator: OAC, ThunkCreator: OTC}} \n        formName={\"OptionForm\"} \n        Name={\"Варианты\"}\n        Search={\"Product\"}\n      />}/>\n    <Route path=\"/Menu/Additives\" render={() => \n      <Content \n        path=\"/Menu/Additives\" \n        data={props.Additives} \n        dispatch={props.dispatch} \n        methods={{actionCreator: AAC, ThunkCreator: ATC}} \n        formName={\"AdditiveForm\"} \n        Name={\"Добавки\"} \n        Search={\"Name\"}\n      />}/>\n    <Route path=\"/Menu/Categories\" render={() => \n      <Content \n        path=\"/Menu/Categories\" \n        data={props.Category} \n        dispatch={props.dispatch} \n        methods={{actionCreator: CAC, ThunkCreator: CTC}} \n        formName={\"CategoryForm\"} \n        Name={\"Категории\"} \n        Search={\"Name\"}\n      />}/>\n    <Route path=\"/Menu/Stocks\" render={() => \n      <Content \n        path=\"/Menu/Stocks\" \n        data={props.Stocks} \n        dispatch={props.dispatch} \n        methods={{actionCreator: StocksAC, ThunkCreator: StocksTC}} \n        formName={\"StockFormЫ\"} \n        Name={\"Акции\"} \n        Search={\"Name\"}\n      />}/>\n    <Route path=\"/Other/Comments\" render={() => \n      <Content \n        path=\"/Other/Comments\" \n        data={props.Comments}\n        dispatch={props.dispatch}\n        methods={{actionCreator: CommentsAC, ThunkCreator: CommentsTC}} \n        formName={\"CommentForm\"} \n        Name={\"Отзывы\"} \n        Search={\"Date\"}\n      />}/>\n    <Route path=\"/Other/Contacts\" render={() => \n      <Content \n        path=\"/Other/Contacts\" \n        data={props.Contacts}\n        dispatch={props.dispatch}\n        methods={{actionCreator: ContactsAC, ThunkCreator: ContactsTC}} \n        formName={\"ContactForm\"} \n        Name={\"Контакты\"}\n        Search={\"Text\"}\n      />}/>\n    <Route path=\"/Other/Cooperation\" render={() => \n      <Content \n        path=\"/Other/Cooperation\" \n        data={props.Cooperations}\n        dispatch={props.dispatch}\n        methods={{actionCreator: CooperationsAC, ThunkCreator: CooperationsTC}} \n        formName={\"CooperationForm\"} \n        Name={\"Кооперации\"} \n        Search={\"Link\"}\n      />}/>\n    <Route path=\"/Other/Levels\" render={() => \n      <Content \n        path=\"/Other/Levels\" \n        data={props.Levels}\n        dispatch={props.dispatch}\n        methods={{actionCreator: LevelsAC, ThunkCreator: LevelsTC}} \n        formName={\"LevelForm\"} \n        Name={\"Уровни\"} \n        Search={\"Name\"}\n      />}/>\n    <Route path=\"/Access/Workers\" render={() => \n      <Content \n        path=\"/Access/Workers\" \n        data={props.Users} \n        dispatch={props.dispatch} \n        methods={{actionCreator: UsersAC, ThunkCreator: UsersTC}} \n        formName={\"UserFormЫ\"} \n        Name={\"Пользователи\"} \n        Search={\"Name\"}\n      />}/>\n    <Route path=\"/Settings/Branches\" render={() => \n      <Content \n        path=\"/Settings/Branches\" \n        data={props.Branches} \n        dispatch={props.dispatch} \n        methods={{actionCreator: BAC, ThunkCreator: BTC}} \n        formName={\"BranchForm\"} \n        Name={\"Отделы\"} \n        Search={\"Address\"}\n      />}/>\n    </div>\n  );\n}\n\nlet mapStateToProps = (state) => {\n\treturn {\n\t\tNavBar: state.NavBar,\n    Branches: state.Branches,\n    Additives: state.Additives,\n    Products: state.Products,\n    Options: state.Options,\n    Category: state.Category,\n    Stocks: state.Stocks,\n    Users: state.Users,\n    Levels: state.Levels,\n    Comments: state.Comments,\n    Contacts: state.Contacts,\n    Cooperations: state.Cooperations\n\t}\n};\n\nlet mapDispatchToProps = (dispatch) => {\n\treturn {\n    dispatch: dispatch\n\t}\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ManagerPanel));","import React from 'react';\nimport {connect} from 'react-redux';\nimport s from'./Notifications.module.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {NotificationsAC} from '../../redux/NotificationsReducer.js';\n\nclass Notifications extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\trender(){\n        if(this.props.Notifications.length > 0){\n            setTimeout(() => this.props.Delete(0), 5000);\n        }\n        console.log(this.props.Notifications)\n        return (\n            <div className={s.Notification}>\n                {this.props.Notifications.map((el, ind) => {\n                    return (\n                        <div \n                            key={uuidv4()}  \n                            className={s.Message} style={{backgroundColor: (el.Type === \"Message\")? \"rgba(93, 206, 0, 1)\": \"rgba(255, 69, 69, 1)\"}} onClick={() => this.props.Delete(ind)}>\n                            {el.Message}\n                        </div>\n                    )\n                })}\n            </div>\n\t   )\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n\treturn {\n        Notifications: state.Notifications.List\n\t}\n};\n\nlet mapDispatchToProps = (dispatch) => {\n\treturn {\n        Delete: (ind) => {\n            dispatch(NotificationsAC.DeleteNotification(ind));\n        }\n\t}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications);","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport './App.css';\nimport AuthForm from './components/AuthForm/AuthForm';\nimport ManagerPanel from './components/ManagerPanel/ManagerPanel';\nimport Notifications from './components/Notifications/Notifications.jsx';\n\nconst App = (props) =>{\n  return (\n    <div className=\"App\">\n      <Notifications/>\n      {sessionStorage.getItem(\"Token\")? <ManagerPanel/>: <AuthForm/>}\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\n\tLinkGroups:[\n        {\n            Links: [\n                {Link: \"/Statistics/Checks\", Name: \"Чеки\"}\n            ],\n            Title: \"Статистика\",\n            Key: \"Statistics\",\n            Icon: \"Statistics.svg\"\n        },\n        {\n            Links: [\n                {Link: \"/Menu/Products\", Name: \"Товары\"},\n                {Link: \"/Menu/Options\", Name: \"Варианты товара\"},\n                {Link: \"/Menu/Additives\", Name: \"Добавки\"},\n                {Link: \"/Menu/Categories\", Name: \"Категории товаров\"},\n                {Link: \"/Menu/Stocks\", Name: \"Акции\"}\n            ],\n            Title: \"Меню\",\n            Key: \"Menu\",\n            Icon: \"Menu.svg\"\n        },\n        {\n            Links: [\n                {Link: \"/Other/Comments\", Name: \"Отзывы\"},\n                {Link: \"/Other/Contacts\", Name: \"Контакты\"},\n                {Link: \"/Other/Cooperation\", Name: \"Кооперация\"},\n                {Link: \"/Other/Levels\", Name: \"Уровни\"}\n            ],\n            Title: \"Всякое\",\n            Key: \"Other\",\n            Icon: \"Menu.svg\"\n        },\n        {\n            Links: [\n                {Link: \"/Access/Workers\", Name: \"Сотрудники\"}\n            ],\n            Title: \"Доступ\",\n            Key: \"Access\",\n            Icon: \"Structure.svg\"\n        },\n        {\n            Links: [\n                {Link: \"/Settings/Branches\", Name: \"Отделы\"}\n            ],\n            Title: \"Настройки\",\n            Key: \"Settings\",\n            Icon: \"Settings.svg\"\n        }\n    ]\n};\n\nconst NavBarReducer = (state = initialState ,action) => {\n\tlet stateCopy = {...state};\n\t\n\tswitch (action.type) {\n\t\tdefault:\n\t\t\treturn stateCopy;\n\t}\n}\n\nexport default NavBarReducer;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form'\n\nimport NavBarReducer from './NavBarReducer.js';\nimport NotificationsReducer from './NotificationsReducer.js';\n\nimport ProductsReducer from './ManagerReducers/Products.js';\nimport AdditivesReducer from './ManagerReducers/Additives.js';\nimport OptionsReducer from './ManagerReducers/Options.js';\nimport CategoryReducer from './ManagerReducers/Category.js';\nimport StocksReducer from './ManagerReducers/Stocks.js';\n\nimport UsersReducer from './ManagerReducers/Users.js';\n\nimport CooperationsReducer from './ManagerReducers/Cooperations.js';\nimport ContactsReducer from './ManagerReducers/Contacts.js';\nimport CommentsReducer from './ManagerReducers/Comments.js';\nimport LevelsReducer from './ManagerReducers/Levels.js';\n\nimport BranchesReducer from './ManagerReducers/Branches.js';\n\nlet redusers = combineReducers({\n  form: formReducer,\n\tNavBar: NavBarReducer,\n  Notifications: NotificationsReducer,\n  Products: ProductsReducer,\n  Additives: AdditivesReducer,\n  Branches: BranchesReducer,\n  Options: OptionsReducer,\n  Category: CategoryReducer,\n  Stocks: StocksReducer,\n  Users: UsersReducer,\n  Levels: LevelsReducer,\n  Comments: CommentsReducer,\n  Contacts: ContactsReducer,\n  Cooperations: CooperationsReducer\n});\n\nlet store = createStore(redusers, applyMiddleware(thunkMiddleware));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/reduxStore';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nconst RenderAllTree = () => {\n\t\tReactDOM.render(\n\t\t\t\t\t<BrowserRouter>\n\t\t\t\t\t\t<Provider store={store}>\n\t\t\t\t\t\t\t<App/>\n\t\t\t\t\t\t</Provider>\n\t\t\t\t\t</BrowserRouter>\n\t\t\t,\n\t\tdocument.getElementById('root')\n\t);\n};\n\nRenderAllTree(store);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"AuthForm_Container__3T8kc\",\"AuthForm\":\"AuthForm_AuthForm__3tZ2h\",\"Title\":\"AuthForm_Title__37p0Z\",\"Form\":\"AuthForm_Form__1XoVE\",\"FormItem\":\"AuthForm_FormItem__3JdNn\",\"FormButtons\":\"AuthForm_FormButtons__1-WO7\",\"Submit\":\"AuthForm_Submit__hAQHD\",\"Reset\":\"AuthForm_Reset__20WmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputPanel\":\"InputForm_InputPanel__3Knid\",\"Head\":\"InputForm_Head__2ierz\",\"Back\":\"InputForm_Back__2PLN9\",\"Title\":\"InputForm_Title__2sw0j\",\"Form\":\"InputForm_Form__3RmJs\",\"FormItem\":\"InputForm_FormItem__1yWqa\",\"VisibilityList\":\"InputForm_VisibilityList__18W8B\",\"Composition\":\"InputForm_Composition__vcrcD\",\"CompositionTitle\":\"InputForm_CompositionTitle__MnsVZ\",\"FormButtons\":\"InputForm_FormButtons__1GVmc\",\"Submit\":\"InputForm_Submit__3HSEb\",\"Reset\":\"InputForm_Reset__1jf7_\",\"Popup\":\"InputForm_Popup__x67th\",\"PopupContent\":\"InputForm_PopupContent__t84Dp\",\"FormItemMessage\":\"InputForm_FormItemMessage__1t14P\",\"FormItemMessageTitle\":\"InputForm_FormItemMessageTitle__2loXZ\",\"FormItemMessageValue\":\"InputForm_FormItemMessageValue__3kIEz\",\"PopupHead\":\"InputForm_PopupHead__2nNTJ\",\"PopupClose\":\"InputForm_PopupClose__37DT5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notifications_Notification__1Jd_-\",\"Message\":\"Notifications_Message__Msh2l\"};"],"sourceRoot":""}