{"version":3,"sources":["components/ManagerPanel/ManagerPanel.module.css","components/ManagerPanel/ManagerContent.module.css","components/ManagerPanel/TableContent/TableContent.module.css","components/ManagerPanel/NavBar/NavBar.module.css","redux/NotificationsReducer.js","components/AuthForm/AuthForm.jsx","components/ManagerPanel/NavBar/NavBar.jsx","components/ManagerPanel/InputForm/InputForm.jsx","components/ManagerPanel/TableContent/TableContent.jsx","components/ManagerPanel/Content.jsx","api/api.js","redux/Validates.js","redux/ManagerReducers/Products.js","redux/ManagerReducers/Options.js","redux/ManagerReducers/Additives.js","redux/ManagerReducers/Category.js","redux/ManagerReducers/Stocks.js","redux/ManagerReducers/Users.js","redux/ManagerReducers/Cooperations.js","redux/ManagerReducers/Contacts.js","redux/ManagerReducers/Comments.js","redux/ManagerReducers/Levels.js","redux/ManagerReducers/Branches.js","components/ManagerPanel/ManagerPanel.jsx","components/Notifications/Notifications.jsx","App.jsx","serviceWorker.js","redux/NavBarReducer.js","redux/reduxStore.js","index.js","components/ManagerPanel/InputForm/InputForm.module.css","components/Notifications/Notifications.module.css"],"names":["module","exports","initialState","List","NotificationsAC","data","type","NotificationsReducer","state","action","stateCopy","tempList","splice","required","value","undefined","phone","slice","replace","length","normalizePhone","onlyNums","renderField","input","label","meta","touched","error","warning","placeholder","connect","form","dispatch","onSubmit","FormData","axios","then","response","Error","Type","Message","sessionStorage","setItem","Token","UserName","window","location","href","reduxForm","props","handleSubmit","pristine","reset","submitting","date","Field","name","component","validate","normalize","disabled","onClick","NavBar","ChangeMinimized","ind","TempMinimized","LinkGroups","Minimized","TempLinkGroups","map","el","setState","index","className","s","key","Title","Icon","src","style","filter","Text","color","Links","uuidv4","activeClassName","activeLink","Link","to","Name","minHeight","innerHeight","CommonData","localStorage","getItem","this","Footer","Exit","removeItem","React","Component","asd","Item","ref","FieldFileInput","onChange","bind","e","target","files","accept","FormItem","Explanations","Validate","pattern","arrOption","FormType","Options","Key","Data","JSON","stringify","console","log","multiple","selected","Status","Popup","Open","OnClose","children","PopupContent","PopupHead","PopupClose","RenderComposition","ChangeVisibilityList","VisibilityList","ChangeVisibilityColumn","TempArr","Items","Visibility","FormComposition","VisibilityPopup","PopupIndex","PopupItem","fields","getAll","CompositionTitle","Tool","cursor","margin","defaultChecked","Value","Formula","forEach","elF","Sign","parseFloat","get","Element","Number","ItemName","FormItemMessage","FormItemMessageTitle","FormItemMessageValue","ClassName","item","parse","title","remove","push","InitialObject","Add","marginTop","submitFailed","InputPanel","Head","goBack","Back","Form","Object","values","InputForm","FormMainItems","Composition","FieldArray","FormButtons","Reset","Submit","invalid","TextSubmit","InputPanelConteiner","ComposinionTable","TD","rowData","titles","ColumnName","TR","content","Titles","Content","Table","ChangeDetailVisibility","indTR","Details","forceUpdate","ChangeSort","Sort","SortContent","currentSort","find","sort","a","b","rowTH","Config","arr","ImageProduct","alt","RowEnd","Change","history","pathname","Delete","confirm","Del","Id","arrComposition","el1","linkColumn","colSpan","TableContent","ChangeSearchData","Search","currentTarget","ContentFilter","indexOf","Get","ToolsBal","backgroundColor","ExportTable","document","getElementsByClassName","cloneNode","AddButton","withRouter","ManagerContent","exact","path","render","methods","ThunkCreator","actionCreator","setInitialValues","formName","initialValues","instance","baseURL","headers","Url","catch","alert","Post","post","Patch","patch","delete","Branches","Additives","Products","Category","Stocks","User","Levels","Comments","Contacts","Cooperations","setData","Api","append","Image","OldImage","Description","IdCategory","Reducer","Address","BranchProducts","elf","IdProduct","elm","IdBranch","BranchesTable","join","ProductOption","ListAdditives","IdProductOption","IdAdditive","AdditivesTable","AdditiveName","Weight","Price","DateBegin","DateEnd","PromoCode","temp","Addresses","IdRole","IdLevel","Users","Date","ManagerPanel","PAC","PTC","OAC","OTC","AAC","ATC","CAC","CTC","StocksAC","StocksTC","CommentsAC","CommentsTC","ContactsAC","ContactsTC","CooperationsAC","CooperationsTC","LevelsAC","LevelsTC","UsersAC","UsersTC","BAC","BTC","Notifications","setTimeout","Notification","App","Boolean","hostname","match","NavBarReducer","redusers","combineReducers","formReducer","ProductsReducer","AdditivesReducer","BranchesReducer","OptionsReducer","CategoryReducer","StocksReducer","UsersReducer","LevelsReducer","CommentsReducer","ContactsReducer","CooperationsReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9ced0722.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ManagerPanel\":\"ManagerPanel_ManagerPanel__1mSXR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ManagerContent\":\"ManagerContent_ManagerContent__2f2Y2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TableContent\":\"TableContent_TableContent__2wZmC\",\"Head\":\"TableContent_Head__2cLEj\",\"Title\":\"TableContent_Title__250Uu\",\"ToolsBal\":\"TableContent_ToolsBal__3N1kl\",\"Tool\":\"TableContent_Tool__28u32\",\"VisibilityList\":\"TableContent_VisibilityList__30pAg\",\"AddButton\":\"TableContent_AddButton__1k7UR\",\"Content\":\"TableContent_Content__1yi17\",\"Search\":\"TableContent_Search__1Z8mf\",\"Table\":\"TableContent_Table__1tF5Y\",\"ImageProduct\":\"TableContent_ImageProduct__3ELP8\",\"RowEnd\":\"TableContent_RowEnd__2WqRM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__oZzke\",\"CommonData\":\"NavBar_CommonData__3dA28\",\"LinkGroups\":\"NavBar_LinkGroups__1wVeR\",\"Title\":\"NavBar_Title__1WJG7\",\"Icon\":\"NavBar_Icon__3XJ5Z\",\"Text\":\"NavBar_Text__1q8AD\",\"Link\":\"NavBar_Link__3tiYK\",\"activeLink\":\"NavBar_activeLink__3qORG\",\"Footer\":\"NavBar_Footer__1MOiY\",\"User\":\"NavBar_User__1eGu3\",\"Exit\":\"NavBar_Exit__3Ndt3\"};","\r\nlet initialState = {\r\n    List: []\r\n};\r\n\r\nconst NotificationsReducer = (state = initialState, action) => {\r\n\t\r\n\tlet stateCopy = {...state};\r\n\t\r\n\tswitch (action.type) {\r\n        case \"SET_Notifications\":{\r\n            stateCopy.List = [...stateCopy.List, action.data]\r\n\t\t\treturn stateCopy;\r\n\t\t}\r\n        case \"Delete_Notification\":{\r\n            let tempList = [...stateCopy.List];\r\n            tempList.splice(action.data, 1);\r\n            stateCopy.List = tempList;\r\n\t\t\treturn stateCopy;\r\n\t\t}\r\n\t\tdefault:{\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\nexport const NotificationsAC = {\r\n    SetNotification: (data) => {\r\n        return {\r\n            type: \"SET_Notifications\",\r\n            data: data\r\n        };\r\n    },\r\n    DeleteNotification: (data) => {\r\n        return {\r\n            type: \"Delete_Notification\",\r\n            data: data\r\n        };\r\n    }\r\n}\r\n\r\nexport default NotificationsReducer;\r\n","import React from 'react';\r\nimport * as axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport { FieldArray, Field, reduxForm } from 'redux-form';\r\n\r\nimport {NotificationsAC} from '../../redux/NotificationsReducer';\r\n\r\n//Валидация\r\nconst required = value => (value || typeof value === 'number' ? undefined : 'Обязательный')\r\nconst phone = value => value.slice(3).replace(/[^\\d]/g, '').length < 10?  \"Номер введен не полностью\": undefined\r\n\r\n//нормализация номера телефона (приведение к шаблону \"+7 999-999-999\")\r\nconst normalizePhone = (value) => {\r\n  if (!value) {\r\n    return value\r\n  }\r\n\r\n  const onlyNums = value.slice(3).replace(/[^\\d]/g, '')\r\n  if (onlyNums.length <= 3) {\r\n    return `+7 ${onlyNums}`\r\n  }\r\n  if (onlyNums.length <= 7) {\r\n    return `+7 ${onlyNums.slice(0, 3)}-${onlyNums.slice(3)}`\r\n  }\r\n  return `+7 ${onlyNums.slice(0, 3)}-${onlyNums.slice(3, 6)}-${onlyNums.slice(6, 10)}`\r\n}\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  meta: { touched, error, warning }\r\n}) => (\r\n  <div>\r\n    <label>{label}</label>\r\n    <div>\r\n      <input {...input} placeholder={label} type={type} />\r\n      {touched &&\r\n        ((error && <span>{error}</span>) ||\r\n          (warning && <span>{warning}</span>))}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst AuthForm = (props) => {\r\n  const { handleSubmit, pristine, reset, submitting } = props\r\n  let Submit = (date) => {\r\n    handleSubmit(date)\r\n    reset()\r\n  }\r\n\treturn (\r\n    <div>\r\n      <form onSubmit={Submit}>\r\n        <Field\r\n          name=\"Phone\" \r\n          type=\"phone\"\r\n          component={renderField} \r\n          label=\"Телефон\"\r\n          validate={[ required, phone ]}\r\n          normalize={normalizePhone}\r\n        />\r\n        <Field\r\n          name=\"Password\"\r\n          type=\"password\"\r\n          component={renderField}\r\n          label=\"Пароль\"\r\n          validate={[required]}\r\n        />\r\n        <div>\r\n          <button type=\"submit\" disabled={submitting}>\r\n            Авторизация\r\n          </button>\r\n          <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\r\n            Стереть\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n    form: \"Auth\",\r\n  };\r\n}; \r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n    onSubmit: (FormData) => {\r\n      axios.post('/api/User/auth', {...FormData})\r\n        .then(function (response) {\r\n          if(!response.data.Error){\r\n            sessionStorage.setItem(\"Token\", response.data.Token)\r\n            sessionStorage.setItem(\"UserName\", response.data.UserName)\r\n            dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.data.Message}));\r\n            window.location.href = \"/\"\r\n          }else{\r\n            dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.data.Message}));\r\n          }\r\n        })\r\n    }\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm()(AuthForm));\r\n","import React from 'react';\r\nimport s from'./NavBar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass NavBar extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            LinkGroups: this.props.NavBar.LinkGroups.map((el)=>{\r\n                return {...el, Minimized: false}\r\n            })\r\n        };\r\n    }\r\n\t\r\n    ChangeMinimized = (ind) => {\r\n        let TempMinimized = ( this.state.LinkGroups[ind].Minimized )? false: true;\r\n        let TempLinkGroups = this.state.LinkGroups.map(el => {\r\n            return {...el, Minimized: false}\r\n        });\r\n        TempLinkGroups[ind].Minimized = TempMinimized;\r\n        this.setState({\r\n            LinkGroups: TempLinkGroups\r\n        });\r\n    }\r\n    \r\n    LinkGroups = (data, index) => {\r\n        return( \r\n            <div className={s.LinkGroups} key={index}>\r\n                <div className={s.Title} onClick={()=> this.ChangeMinimized(index)} key={index}>\r\n                    <img \r\n                        className={s.Icon} \r\n                        src={\"/Assets/Icons/NavBar/\" + data.Icon} \r\n                        style={{filter: (data.Minimized? \"invert(20%) sepia(34%) saturate(1105%) hue-rotate(339deg) brightness(102%) contrast(101%)\": null)}}/>\r\n                    <div className={s.Text} style={{color: (data.Minimized? \"rgba(255, 182, 41, 1)\": null)}}>{data.Title}</div>\r\n                </div>\r\n                {data.Minimized?\r\n                    <ul>\r\n                        {data.Links.map((el, ind)=> <li key={uuidv4()}><NavLink key={ind+\"link\"} activeClassName={s.activeLink} className={s.Link} to={el.Link}>{el.Name}</NavLink></li>)}\r\n                    </ul>\r\n                    : null}\r\n            </div>\r\n        );\r\n    }\r\n    \r\n\trender(){\r\n        return (\r\n            <div className={s.NavBar} style={{minHeight: window.innerHeight}}>\r\n                <div className={s.CommonData}>\r\n                    <div>Логотип</div>\r\n                    <div><img src={\"/Assets/Icons/NavBar/Logo.png\"}/></div>\r\n                    <div>{localStorage.getItem(\"UserName\")}</div>\r\n                </div>\r\n                <hr/>\r\n                {this.state.LinkGroups.map(\r\n                    (el, ind)=> {\r\n                      return this.LinkGroups(el, ind);\r\n                    }\r\n                )}\r\n                <hr/>\r\n                <div className={s.Footer}>\r\n                    <div><a href=\"/\" className={s.Exit} onClick={() => {localStorage.removeItem(\"Token\"); localStorage.removeItem(\"UserName\");}}>Выйти</a></div>\r\n                </div>\r\n            </div>\r\n\t   )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, {compose} from 'react';\r\nimport * as axios from 'axios';\r\nimport s from './InputForm.module.css';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { FieldArray, Field, reduxForm } from 'redux-form';\r\n\r\nconst renderField = ({input, data, label, type, asd, meta: { touched, error, warning } }) => {\r\n    let Item = null;\r\n    Item = <input ref={data} {...input} type={type} placeholder={label} required/>;\r\n    if(type === \"textarea\"){\r\n        Item = <textarea {...input} placeholder={label} required></textarea>;\r\n    };\r\n    if(type === \"checkbox\"){\r\n        Item = <input ref={data} {...input} type={type} placeholder={label}/>;\r\n    };\r\n    return(\r\n        <>\r\n            {Item}\r\n            {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </>\r\n    )\r\n};\r\n\r\nclass FieldFileInput extends React.Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.onChange = this.onChange.bind(this)\r\n  }\r\n\r\n  onChange(e) {\r\n    const { input: { onChange } } = this.props;\r\n    onChange(e.target.files[0]);\r\n  }\r\n\r\n  render(){\r\n    const { input: { value } } = this.props\r\n    const {input,label, required, meta, } = this.props  //whatever props you send to the component from redux-form Field\r\n    return(\r\n     <div>\r\n       <input\r\n        type='file'\r\n        accept='.jpg, .png, .jpeg'\r\n        onChange={this.onChange}\r\n       />\r\n     </div>\r\n    )\r\n}\r\n}\r\n\r\nclass FormItem extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {Item: null};\r\n        switch (this.props.Type){\r\n            case \"Text\": \r\n                this.state.Item = <Field\r\n                                type={\"input\"}\r\n                                label={this.props.Explanations} \r\n                                name={this.props.Name}\r\n                                component={renderField}\r\n                                validate={this.props.Validate} />;\r\n                break;\r\n            case \"Password\": \r\n                this.state.Item = <Field\r\n                                type={\"password\"}\r\n                                name={this.props.Name}\r\n                                component={renderField}\r\n                                validate={this.props.Validate} />;\r\n                break;\r\n            case \"TextArea\": \r\n                this.state.Item = <Field\r\n                                type={\"textarea\"}\r\n                                name={this.props.Name}\r\n                                component={renderField}\r\n                                validate={this.props.Validate} />;\r\n                break;\r\n            case \"Number\":\r\n                this.state.Item = <Field\r\n                                type={\"number\"}\r\n                                name={this.props.Name}\r\n                                 component={renderField}\r\n                                 validate={this.props.Validate} />;\r\n                break;\r\n            case \"Checkbox\":\r\n                this.state.Item = <Field\r\n                                type={\"checkbox\"}\r\n                                name={this.props.Name}\r\n                                 component={renderField}\r\n                                 validate={this.props.Validate} />;\r\n                break;\r\n            case \"Phone\":\r\n                this.state.Item = <Field\r\n                                type={\"tel\"}\r\n                                pattern={\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"}\r\n                                label={\"999-999-9999\"}\r\n                                name={this.props.Name}\r\n                                component={renderField}\r\n                                validate={this.props.Validate} />;\r\n                break;\r\n            case \"Date\":\r\n                this.state.Item = <Field\r\n                                type={\"datetime-local\"}\r\n                                name={this.props.Name}\r\n                                component={renderField}\r\n                                validate={this.props.Validate} />;\r\n                break;\r\n            case \"Color\":\r\n                this.state.Item = <Field\r\n                                type={\"color\"}\r\n                                name={this.props.Name}\r\n                                component={renderField}\r\n                                validate={this.props.Validate} />;\r\n            case \"File\":\r\n                this.state.Item = <Field\r\n                                type={\"file\"}\r\n                                name={this.props.Name}\r\n                                component={FieldFileInput}\r\n                                validate={this.props.Validate} />;\r\n                break;\r\n            case \"Select\":\r\n                let arrOption;\r\n                if(this.props.FormType == \"Main\"){\r\n                   arrOption = [<option key={0} value={\"Не выбрано\"}>Не выбрано</option> , \r\n                               ...(this.props.Options.map( (el, ind) => (<option key={ind+1} value={el.Key}>{el.Data}</option>)))];\r\n                }\r\n                if(this.props.FormType == \"Composition\"){\r\n                    arrOption = [<option key={0} value={JSON.stringify(\"Не выбрано\")}>Не выбрано</option> , \r\n                               ...(this.props.Options.map( (el, ind) => (<option key={ind+1} value={JSON.stringify(el.Key)}>{el.Data}</option>)))];\r\n                };\r\n                this.state.Item = <Field\r\n                                    name={this.props.Name}\r\n                                    component={\"select\"}\r\n                                    validate={this.props.Validate}>;\r\n                                      {arrOption}\r\n                                  </Field>;\r\n                break;\r\n            case \"SelectMultiple\":\r\n              console.log(this.props.Options)\r\n              this.state.Item = <Field\r\n                                  multiple\r\n                                  name={this.props.Name}\r\n                                  component={\"select\"}\r\n                                  validate={this.props.Validate}>;\r\n                                      {this.props.Options.map( (el, ind) => (<option key={ind+1} value={el.Key} selected={(el.Status)? \"selected\": null }>{el.Data}</option>))}\r\n                              </Field>;\r\n                break;\r\n            default: \r\n\r\n                break;\r\n        }\r\n    }\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<label>\r\n                <span>{this.props.Explanations}</span>\r\n\t\t\t\t{this.state.Item}\r\n            </label>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nconst Popup = ({Open, OnClose, children}) => {\r\n    if(!Open) return null;\r\n    return (\r\n\t\t<div className={s.Popup}>\r\n            <div className={s.PopupContent}>\r\n                <div className={s.PopupHead}>\r\n                    Элемент состава\r\n                </div>\r\n                {children}\r\n                <div className={s.PopupClose} onClick={() => OnClose()}>\r\n                    Сохранить\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass RenderComposition extends React.Component{ \r\n    constructor(props){\r\n        super(props);\r\n        this.state = { \r\n            Items: this.props.FormComposition.Items,\r\n            VisibilityList: false,\r\n            VisibilityPopup: false,\r\n            PopupIndex: null,\r\n            PopupItem: null\r\n        }\r\n        \r\n    }\r\n    //Изменение видимости списка, видимых столбцов \r\n    ChangeVisibilityList = () => {\r\n        this.setState({\r\n            VisibilityList: !this.state.VisibilityList\r\n        })\r\n    }\r\n    //Изменение списка, показываемых столбцов\r\n    ChangeVisibilityColumn = (ind) => {\r\n        let TempArr = this.state.Items;\r\n        if(TempArr[ind].Visibility){\r\n            TempArr[ind].Visibility = false;\r\n        }else{\r\n            TempArr[ind].Visibility = true;\r\n        };\r\n        this.setState({\r\n            Items: TempArr\r\n        });\r\n    }\r\n    \r\n\trender(){\r\n        let  Items = this.state.Items.filter(el =>  {return el.Visibility? 1: 0;});\r\n        if(!this.props.fields.getAll()){\r\n            return (\r\n                <>\r\n                    <div className={s.CompositionTitle}>Состав</div>\r\n                    <div>\r\n                        <img\r\n                            onClick={() => {\r\n                                this.props.fields.push(this.props.FormComposition.InitialObject);\r\n                                this.setState({\r\n                                    PopupIndex: this.props.fields.length,\r\n                                    PopupItem: `Composition[${this.props.fields.length}]`,\r\n                                    VisibilityPopup: true\r\n                                })\r\n                            }}\r\n                            className={s.Add}\r\n                            style={{cursor: \"pointer\", marginTop: \"10px\"}}\r\n                            title=\"Add item\" \r\n                            src={\"/Assets/Icons/InputPanel/Add.svg\"}/>\r\n                        {(this.props.touched || this.props.submitFailed) && this.props.error && <span>{this.props.error}</span>}\r\n                    </div>\r\n                </>)\r\n        }\r\n        return (\r\n        <div>\r\n            \r\n            <div className={s.CompositionTitle}>Состав</div>\r\n            <div className={s.Tool}>\r\n                <span \r\n                    onClick={() => this.ChangeVisibilityList()} \r\n                    style={{color: \"#FFB629\", cursor: \"pointer\"}}>\r\n                    Столбцы\r\n                </span>\r\n                {this.state.VisibilityList?\r\n                    (<div className={s.VisibilityList}>\r\n                        <div style={{margin: \"10px\"}}>Отображать столбцы</div>\r\n                        {this.state.Items.map((el, ind) => {\r\n                            return (\r\n                                <label key={ind}>\r\n                                    <input onClick={() => this.ChangeVisibilityColumn(ind)} type=\"checkbox\" defaultChecked={el.Visibility? true: false}/>\r\n                                    {el.Title}\r\n                                </label>\r\n                            )\r\n                        })\r\n                        }\r\n                    </div>): null}\r\n            </div>\r\n            <Popup Open={this.state.VisibilityPopup} OnClose={() => this.setState({VisibilityPopup: false, PopupIndex: null})}>\r\n                <div>\r\n                    {this.props.FormComposition.Items.map(\r\n                                (el, ind)=> {\r\n                                    if(el.Type === undefined && this.state.PopupIndex !== null){\r\n                                        let Value = 0;\r\n                                        el.Formula.forEach(elF => {\r\n                                            if(elF.Sign === \"+E\") Value += parseFloat(this.props.fields.get(this.state.PopupIndex)[elF.Element]);\r\n                                            if(elF.Sign === \"+N\") Value += parseFloat(elF.Number);\r\n                                            if(elF.Sign === \"*E\") Value *= parseFloat(this.props.fields.get(this.state.PopupIndex)[elF.Element]);\r\n                                            if(elF.Sign === \"*N\") Value *= parseFloat(elF.Number);\r\n                                        })\r\n                                        this.props.fields.get(this.state.PopupIndex)[el.ItemName] = Value;\r\n                                        return (\r\n                                            <div key={ind} className={s.FormItemMessage}>\r\n                                                <div className={s.FormItemMessageTitle}>{el.Title}</div>\r\n                                                <div className={s.FormItemMessageValue}>{Value}</div>\r\n                                            </div>);\r\n                                    }\r\n\r\n                                    return (\r\n                                        <div key={ind} className={s.FormItem}>\r\n                                            <FormItem\r\n                                                key={ind+\"FI\"}\r\n                                                ClassName={s.FormItem}\r\n                                                Name={`${this.state.PopupItem}.${el.ItemName}`}\r\n                                                Explanations={el.Title}\r\n                                                Type={el.Type}\r\n                                                FormType={\"Composition\"}\r\n                                                Options={el.Options}/>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                </div> \r\n            </Popup>\r\n            <table>\r\n            <thead>\r\n                <tr>\r\n                    {Items.map((el, ind)=> <th key={ind}>{el.Title}</th>)}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {this.props.fields.map((item, index) =>\r\n                    <tr key={index}>\r\n                        {Items.map(\r\n                            (el, ind)=> {\r\n                                if(el.Type === \"Select\"){\r\n                                    return <td key={ind}>{JSON.parse(this.props.fields.get(index)[el.ItemName]).Name}</td>\r\n                                }\r\n                                if(el.Type === \"Checkbox\"){\r\n                                    return <td key={ind}>{this.props.fields.get(index)[el.ItemName]? \"Да\": \"Нет\"}</td>\r\n                                }\r\n                                return (\r\n                                        <td key={ind}>{this.props.fields.get(index)[el.ItemName]}</td>\r\n                                    )\r\n                                \r\n                            })\r\n                        }\r\n                        <td>\r\n                            <img\r\n                                style={{cursor: \"pointer\"}}\r\n                                title=\"Change Item\" \r\n                                src={\"/Assets/Icons/InputPanel/Change.svg\"}\r\n                                onClick={() => {\r\n                                    this.setState({\r\n                                        PopupIndex: index,\r\n                                        PopupItem: item,\r\n                                        VisibilityPopup: true\r\n                                    })\r\n                                }}/>\r\n                        </td>\r\n                        <td>\r\n                            <img\r\n                                style={{cursor: \"pointer\"}}\r\n                                title=\"Remove Item\" \r\n                                src={\"/Assets/Icons/InputPanel/Delete.svg\"}\r\n                                onClick={() => this.props.fields.remove(index)}/>\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n        </table>\r\n            <div>\r\n                <img\r\n                    onClick={() => {\r\n                        this.props.fields.push(this.props.FormComposition.InitialObject);\r\n                        this.setState({\r\n                            PopupIndex: this.props.fields.length,\r\n                            PopupItem: `Composition[${this.props.fields.length}]`,\r\n                            VisibilityPopup: true\r\n                        })\r\n                    }}\r\n                    className={s.Add}\r\n                    style={{cursor: \"pointer\", marginTop: \"10px\"}}\r\n                    title=\"Add item\" \r\n                    src={\"/Assets/Icons/InputPanel/Add.svg\"}/>\r\n                {(this.props.touched || this.props.submitFailed) && this.props.error && <span>{this.props.error}</span>}\r\n            </div>\r\n        </div>\r\n        )\r\n\t}\r\n}\r\n\r\nclass InputPanel extends React.Component {\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className={s.InputPanel} style={{minHeight: window.innerHeight}}>\r\n                <div className={s.Head}>\r\n                    <div onClick={() => this.props.goBack()} className={s.Back}>\r\n                        <img src=\"/Assets/Icons/InputPanel/Back.svg\"/>\r\n                        <span>Назад</span>\r\n                    </div>\r\n                </div>\r\n                <div className={s.Title}>{this.props.Title}</div>\r\n                {/*Форма для заполения*/}\r\n                <div>\r\n                    <form onSubmit={this.props.handleSubmit} className={s.Form} >\r\n                        {/*Массив основных полей ввода*/}\r\n                        {Object.values(this.props.InputForm.FormMainItems).map(\r\n                            (el, ind) => \r\n                                <div key={ind} className={s.FormItem}>\r\n                                    <FormItem\r\n                                            Name={el.ItemName}\r\n                                            Explanations={el.Explanations}\r\n                                            Type={el.Type}\r\n                                            FormType={\"Main\"}\r\n                                            Validate={el.Validate}\r\n                                            Options={el.Options}/>\r\n                                \r\n\t\t\t                     </div>)}\r\n                        {/*Массив элементов состава*/}\r\n                        {this.props.InputForm.FormComposition?\r\n                        <div className={s.Composition}>\r\n                            <FieldArray FormComposition={this.props.InputForm.FormComposition} name=\"Composition\" component={RenderComposition}/> \r\n                        </div>\r\n                        : null}\r\n                        {/*Кнопки для работы с формой*/}\r\n                        <div className={s.FormButtons}>\r\n                            <div>\r\n                                <img\r\n                                    onClick={this.props.reset}\r\n                                    className={s.Reset}\r\n                                    title=\"Reset form\" \r\n                                    src={\"/Assets/Icons/InputPanel/Reset.svg\"}\r\n                                    disabled={this.props.pristine || this.props.submitting}/>\r\n                            </div>\r\n                            <div>\r\n                                <button className={s.Submit} disabled={this.props.invalid}>{this.props.TextSubmit}</button>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </form>\r\n                </div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nlet InputPanelConteiner = reduxForm()(InputPanel);\r\n\r\nexport default InputPanelConteiner;","import React from 'react';\r\nimport s from './TableContent.module.css';\r\nimport {withRouter, Link} from 'react-router-dom';\r\n\r\nclass ComposinionTable extends React.Component { \r\n    //строка ячеек таблицы\r\n    TD = (rowData, titles) => {\r\n        return titles.map((el, ind) => {\r\n            return (<td key={ind}>{rowData[el.ColumnName]}</td>)\r\n        });\r\n    }\r\n    //строка или два строки таблицы\r\n    TR = (content, titles) => {\r\n        return Object.values(content).map((el, ind) => {\r\n            return (\r\n                <tr key={ind}>{this.TD(el, titles)}</tr>\r\n            )\r\n        });\r\n    }\r\n    render(){\r\n        return (\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            {this.props.Titles.map( (el, ind) => {\r\n                                return <th key={ind}>{el.Name}</th>\r\n                                }\r\n                            )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.TR(this.props.Content, this.props.Titles)}\r\n                    </tbody>\r\n                </table>\r\n        )\r\n    }\r\n};\r\n\r\nclass Table extends React.Component {\r\n    //Изменение фидимости состава\r\n    ChangeDetailVisibility = (indTR) => {\r\n        this.props.Content[indTR].Details = (this.props.Content[indTR].Details)? false : true;\r\n        this.forceUpdate();\r\n    }\r\n    //Изменение параметра сортировки Контента \r\n    ChangeSort = (index) => {\r\n        this.props.Titles.forEach((el, ind) => {\r\n                if(ind === index){\r\n                    if(el.Sort === \"Desc\" || el.Sort === null){\r\n                        el.Sort = \"Asc\";\r\n                    }else{\r\n                        el.Sort = \"Desc\";\r\n                    }\r\n                }else{\r\n                    el.Sort = null;   \r\n                }\r\n                return el;\r\n            });\r\n        this.forceUpdate();\r\n    };\r\n    //Сортировка параметру Сортировки\r\n    SortContent = (Content) => {\r\n        let currentSort = this.props.Titles.find((el,ind) => {\r\n            if(el.Sort != null){\r\n                return true;\r\n            }else{\r\n                return false;\r\n            }\r\n        });\r\n        if(currentSort === undefined){ return Content;};\r\n        return Content.sort((a, b) => {\r\n            if(currentSort.Sort === \"Asc\"){\r\n                if(a[currentSort.ColumnName] > b[currentSort.ColumnName]){return 1;}else{return -1;}; return 0;\r\n            }\r\n            if(currentSort.Sort === \"Desc\"){\r\n                if(a[currentSort.ColumnName] < b[currentSort.ColumnName]){return 1;}else{return -1;}; return 0;\r\n            }\r\n            return 0;\r\n        });\r\n    };\r\n    //строка заголовков\r\n    rowTH = (titles) => {\r\n        return (\r\n            <tr>\r\n                {titles.map( (el, ind) => {\r\n                        if(el.Sort === \"Asc\"){return <th \r\n                                                        key={ind} \r\n                                                        onClick={()=>{this.ChangeSort(ind);}}\r\n                                                    >{el.Name + \"⮝\"}</th>};\r\n                        if(el.Sort === \"Desc\"){return <th \r\n                                                        key={ind} \r\n                                                        onClick={()=>{this.ChangeSort(ind);}}\r\n                                                    >{el.Name + \"⮟\"}</th>};\r\n                        return <th \r\n                                   key={ind} \r\n                                   onClick={()=>{this.ChangeSort(ind);}}\r\n                                >{el.Name}</th>\r\n                    }\r\n                )}\r\n            </tr>\r\n        )\r\n    }\r\n    //строка ячеек таблицы\r\n    TD = (rowData, Titles, Config, indTR, Composition) => {\r\n        let arr = Titles.map((el, ind) => {\r\n            if(el.ColumnName === \"Url\"){\r\n                return (\r\n                    <td key={ind}><img className={s.ImageProduct} src={rowData[el.ColumnName]} alt=\"Изображение\"/></td>\r\n                )\r\n            }\r\n            return (<td key={ind}>{rowData[el.ColumnName]}</td>)\r\n        });\r\n        let RowEnd = \r\n            <td key={arr.length+1}\r\n                className={s.RowEnd}>\r\n                {Config.Details? <div onClick={()=>{this.ChangeDetailVisibility(indTR)}}>Дeтали</div> : null}\r\n                {Config.Change?\r\n                    <div \r\n                        onClick={\r\n                                ()=>{\r\n                                    this.props.Change({...rowData, Composition: Composition});\r\n                                    this.props.history.push(this.props.history.location.pathname+\"/Change\");\r\n                                }}><img src=\"/Assets/Icons/TableContent/Change.svg\"/></div> : null}\r\n                {Config.Delete?\r\n                    <div\r\n                        onClick={\r\n                                ()=>{\r\n                                    console.log(  );\r\n                                    if(window.confirm(\"Точно удалить?\")){\r\n                                        this.props.Del({Id: rowData.Id});\r\n                                    }\r\n                                }\r\n                             }><img src=\"/Assets/Icons/TableContent/Delete.svg\"/></div> : null}\r\n            </td>\r\n        arr = [...arr, RowEnd];\r\n        return arr;\r\n    }\r\n    //строка или строка и подтаблица в таблице\r\n    TR = (Content, Titles, Composition, Config) => {\r\n        return Content.map((el, ind) => {\r\n            let arrComposition = (Composition? Composition.Content.filter((el1)=>{\r\n                    //id_com_ingredient\r\n                    if(el.Id == el1[Composition.linkColumn]){\r\n                        return true;\r\n                    }\r\n                    return false;\r\n            }): null);\r\n            if(Composition === null || Composition === undefined || !el.Details){\r\n                return (<tr key={ind}>{this.TD(el, Titles, Config, ind, arrComposition)}</tr>);    \r\n            };\r\n    \r\n            return (\r\n                <>\r\n                    <tr key={ind}>{this.TD(el, Titles, Config, ind, arrComposition)}</tr>\r\n                    <tr key={\"compositionTR_\"+ind}>\r\n                        <td colSpan=\"100\" key={\"compositionTD_\"+ind}>\r\n                            <ComposinionTable\r\n                                key={\"compositionTable_\"+ind}\r\n                                Titles={Composition.Title}\r\n                                Content={arrComposition}\r\n                                Config={Config}/>\r\n                        </td>\r\n                    </tr>\r\n                </>\r\n            )\r\n        });\r\n    }\r\n    render(){\r\n        return (\r\n                <table className={\"ExportTable\"}>\r\n                    <thead>\r\n                        {this.rowTH(this.props.Titles)}\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.TR(this.SortContent(this.props.Content), this.props.Titles, this.props.Composition, this.props.Config)}\r\n                    </tbody>\r\n                </table>\r\n        )\r\n    }\r\n};\r\n\r\nclass TableContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            Search: {Data: \"\", ColumnName: this.props.Search? this.props.Search: \"Name\"},\r\n            Titles: Object.values(this.props.Table.Title).map(el => {\r\n                el[\"Sort\"] = null;\r\n                return el;\r\n            }),\r\n            VisibilityList: false\r\n        }\r\n    }\r\n    \r\n\tcomponentDidMount(){\r\n        this.props.Get();\r\n        /*\r\n        if(this.props.Table.Content.length === 0){\r\n            this.props.Get();\r\n        };\r\n        */\r\n\t};\r\n    //Изменение строки, по которой ведется поиск\r\n    ChangeSearchData = (e) => {\r\n        this.setState({\r\n            Search: {Data: e.currentTarget.value, ColumnName: this.state.Search.ColumnName}\r\n        })\r\n    }\r\n    //фильтрация контента, по строке поиска\r\n    ContentFilter = (Content) => {\r\n        let ContentFilter = Content.filter((el)=>{\r\n            if(el[this.state.Search.ColumnName].indexOf(this.state.Search.Data) >= 0){\r\n                return true;\r\n            }else{\r\n                return false;\r\n            }\r\n        });\r\n        return ContentFilter;\r\n    }\r\n    \r\n    //Изменение видимости списка, видимых столбцов \r\n    ChangeVisibilityList = () => {\r\n        this.setState({\r\n            VisibilityList: !this.state.VisibilityList\r\n        })\r\n    }\r\n    //Изменение списка, показываемых столбцов\r\n    ChangeVisibilityColumn = (ind) => {\r\n        let TempArr = this.state.Titles;\r\n        if(TempArr[ind].Visibility){\r\n            TempArr[ind].Visibility = false;\r\n        }else{\r\n            TempArr[ind].Visibility = true;\r\n        };\r\n        this.setState({\r\n            Titles: TempArr\r\n        });\r\n    }\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className={s.TableContent} style={{minHeight: window.innerHeight}}>\r\n\t\t\t\t<div className={s.Head}>\r\n\t\t\t\t\t<div className={s.Title}>{this.props.Title}</div>\r\n                    <div className={s.ToolsBal}>\r\n                        <div className={s.Tool}>\r\n                            <span \r\n                                onClick={() => this.ChangeVisibilityList()} \r\n                                style={this.state.VisibilityList?{backgroundColor: \"#FFB629\", color: \"#FFFFFF\"}:null}>Столбцы</span>\r\n                            {this.state.VisibilityList?\r\n                            (<div className={s.VisibilityList}>\r\n                                <div style={{margin: \"10px\"}}>Отображать столбцы</div>\r\n                                {this.state.Titles.map((el, ind) => {\r\n                                    return (\r\n                                        <label key={ind}>\r\n                                            <input onClick={() => this.ChangeVisibilityColumn(ind)} type=\"checkbox\" defaultChecked={el.Visibility? true: false}/>\r\n                                            {el.Name}\r\n                                        </label>\r\n                                    )\r\n                                })}\r\n                            </div>): null}\r\n                        </div>\r\n                        <div className={s.Tool}>\r\n                          <span \r\n                            onClick={() => this.props.ExportTable(document.getElementsByClassName(\"ExportTable\")[0].cloneNode(true))\r\n                            }>Экспорт</span>\r\n                        </div>\r\n                    </div>\r\n                    {this.props.Table.Config.Add? \r\n                        <Link to={this.props.location.pathname + \"/Add\"}><div className={s.AddButton}>Добавить</div></Link>: null\r\n                    }\r\n\t\t\t\t</div>\r\n                <div className={s.Content}>\r\n                    <div className={s.Search}>\r\n                        <img src=\"/Assets/Icons/TableContent/Search.svg\"/>\r\n                        <input type=\"search\" onChange={this.ChangeSearchData} placeholder={\"Быстрый поиск\"}/>\r\n                    </div>\r\n                    <div className={s.Table}>\r\n                        <Table\r\n                            Titles={this.state.Titles.filter(el =>  {return el.Visibility? 1: 0;})} \r\n                            Content={this.ContentFilter(this.props.Table.Content)}\r\n                            Composition={this.props.Table.Composition}\r\n                            Config={this.props.Table.Config}\r\n                            Change={this.props.Change}\r\n                            Del={this.props.Del}\r\n                            history={this.props.history}/>\r\n                    </div>\r\n                </div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nexport default withRouter(TableContent);\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport s from './ManagerContent.module.css';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport InputForm from './InputForm/InputForm';\r\nimport TableContent from './TableContent/TableContent';\r\n\r\nconst Content = (props) => {\r\n  return (\r\n\t<div className={s.ManagerContent}>\r\n    <Route exact  path={props.path} render={() => \r\n      <TableContent \r\n        Title={props.Name}\r\n\t\t\t\tTable={props.data.Table}\r\n        Search={props.Search}\r\n        Get={() => props.dispatch(props.methods.ThunkCreator.Get())}\r\n        Change={(data) => props.dispatch(props.methods.actionCreator.setInitialValues(data))}\r\n\t\t\t\tDel={(data) => props.dispatch(props.methods.ThunkCreator.Del(data))}\r\n      />\r\n    } />\r\n    <Route exact path={`${props.path}/Add`} render={() => \r\n      <InputForm\r\n        Title={\"Добавление\"}\r\n        TextSubmit={\"Добавить\"}\r\n        goBack={()=>{props.history.goBack();}}\r\n      \r\n        form={props.formName}\r\n        initialValues={null}\r\n      \r\n        InputForm={props.data.InputForm}\r\n        onSubmit={(Data) => props.dispatch(props.methods.ThunkCreator.Add(Data))}\r\n      />\r\n    } />\r\n    <Route exact path={`${props.path}/Change`} render={() => \r\n      <InputForm\r\n        Title={\"Изменение\"}\r\n        TextSubmit={\"Изменить\"}\r\n        goBack={()=>{props.history.goBack();}}\r\n      \r\n        form={props.formName}\r\n        initialValues={props.data.InputForm.initialValues}\r\n      \r\n        InputForm={props.data.InputForm}\r\n        onSubmit={(Data) => props.dispatch(props.methods.ThunkCreator.Change(Data))}\r\n      />\r\n    } />\r\n\t</div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Content);","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: '/api',\r\n    headers: {'authorization': localStorage.getItem(\"Token\")}\r\n  })\r\n\r\nconst Get = (Url, data) => instance.get(Url, data)\r\n  .then((response) => {\r\n    return response.data;\r\n  }).catch(error => {\r\n    alert(\"Ошибка. Нет связи с сервером. Проверте соединение с сервером или обратитесь к администратору.\");\r\n    window.location = \"/\";\r\n  });\r\n\r\nconst Post = (Url, data) => instance.post(Url, data)\r\n  .then((response) => {\r\n    return response.data;\r\n  }).catch(error => {\r\n    alert(\"Ошибка. Нет связи с сервером. Проверте соединение с сервером или обратитесь к администратору.\");\r\n    window.location = \"/\";\r\n  });\r\n\r\nconst Patch = (Url, data) => instance.patch(Url, data)\r\n  .then((response) => {\r\n    return response.data;\r\n  }).catch(error => {\r\n    alert(\"Ошибка. Нет связи с сервером. Проверте соединение с сервером или обратитесь к администратору.\");\r\n    window.location = \"/\";\r\n  });\r\n    \r\nconst Delete = (Url, data) => instance.delete(Url, { data: data })\r\n  .then((response) => {\r\n    return response.data;\r\n  }).catch(error => {\r\n    alert(\"Ошибка. Нет связи с сервером. Проверте соединение с сервером или обратитесь к администратору.\");\r\n    window.location = \"/\";\r\n  });\r\n\r\n\r\nexport const Branches = {\r\n  Get: (data) => Get(\"/Branch\", data),\r\n  Insert: (data) => Post(\"/Branch\", data),\r\n  Change: (data) => Patch(\"/Branch\", data),\r\n  Delete: (data) => Delete(\"/Branch\", data)\r\n}\r\nexport const Additives = {\r\n  Get: (data) => Get(\"/Additive\", data),\r\n  Insert: (data) => Post(\"/Additive\", data),\r\n  Change: (data) => Patch(\"/Additive\", data),\r\n  Delete: (data) => Delete(\"/Additive\", data)\r\n}\r\nexport const Products = {\r\n  Get: (data) => Get(\"/Product\", data),\r\n  Insert: (data) => Post(\"/Product\", data),\r\n  Change: (data) => Patch(\"/Product\", data),\r\n  Delete: (data) => Delete(\"/Product\", data)\r\n}\r\nexport const Options = {\r\n  Get: (data) => Get(\"/ProductOption\", data),\r\n  Insert: (data) => Post(\"/ProductOption\", data),\r\n  Change: (data) => Patch(\"/ProductOption\", data),\r\n  Delete: (data) => Delete(\"/ProductOption\", data)\r\n}\r\nexport const Category = {\r\n  Get: (data) => Get(\"/Category\", data),\r\n  Insert: (data) => Post(\"/Category\", data),\r\n  Change: (data) => Patch(\"/Category\", data),\r\n  Delete: (data) => Delete(\"/Category\", data)\r\n}\r\nexport const Stocks = {\r\n  Get: (data) => Get(\"/Stock\", data),\r\n  Insert: (data) => Post(\"/Stock\", data),\r\n  Change: (data) => Patch(\"/Stock\", data),\r\n  Delete: (data) => Delete(\"/Stock\", data)\r\n}\r\nexport const User = {\r\n  Get: (data) => Get(\"/User\", data),\r\n  Insert: (data) => Post(\"/User\", data),\r\n  Change: (data) => Patch(\"/User\", data),\r\n  Delete: (data) => Delete(\"/User\", data)\r\n}\r\nexport const Levels = {\r\n  Get: (data) => Get(\"/Level\", data),\r\n  Insert: (data) => Post(\"/Level\", data),\r\n  Change: (data) => Patch(\"/Level\", data),\r\n  Delete: (data) => Delete(\"/Level\", data)\r\n}\r\nexport const Comments = {\r\n  Get: (data) => Get(\"/Comment\", data),\r\n  Insert: (data) => Post(\"/Comment\", data),\r\n  Change: (data) => Patch(\"/Comment\", data),\r\n  Delete: (data) => Delete(\"/Comment\", data)\r\n}\r\nexport const Contacts = {\r\n  Get: (data) => Get(\"/Contact\", data),\r\n  Insert: (data) => Post(\"/Contact\", data),\r\n  Change: (data) => Patch(\"/Contact\", data),\r\n  Delete: (data) => Delete(\"/Contact\", data)\r\n}\r\nexport const Cooperations = {\r\n  Get: (data) => Get(\"/Cooperation\", data),\r\n  Insert: (data) => Post(\"/Cooperation\", data),\r\n  Change: (data) => Patch(\"/Cooperation\", data),\r\n  Delete: (data) => Delete(\"/Cooperation\", data)\r\n}\r\n","//Валидация\r\nexport const required = value => (value || typeof value === 'number' ? undefined : 'Обязательный')\r\nexport const min5 = value => (value.length < 5 ? undefined : 'Надо меньше 5')\r\nexport const phone = value => value.slice(3).replace(/[^\\d]/g, '').length < 10?  \"Номер введен не полностью\": undefined\r\n","import {Products as Api} from '../../api/api.js';\r\nimport {NotificationsAC} from '../NotificationsReducer.js';\r\nimport {required} from '../Validates.js'\r\n\r\nlet initialState = {\r\n  InputForm: {\r\n    initialValues: {},\r\n    FormMainItems: [\r\n      {\r\n        ItemName: \"Name\",\r\n        Explanations: \"Название\",\r\n        Type: \"Text\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Description\",\r\n        Explanations: \"Описание\",\r\n        Type: \"TextArea\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Image\",\r\n        Explanations: \"Изображение\",\r\n        Type: \"File\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"IdCategory\",\r\n        Explanations: \"Категория\",\r\n        Type: \"Select\",\r\n        Options: [],\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Branches\",\r\n        Explanations: \"Отделения\",\r\n        Type: \"SelectMultiple\",\r\n        Options: [],\r\n        Validate: [required]\r\n      }\r\n    ]\r\n  },\r\n  Table:{\r\n    Title: [\r\n        {Name: \"Название\", ColumnName: \"Name\", Visibility: true},\r\n        {Name: \"Описание\", ColumnName: \"Description\", Visibility: true},\r\n        {Name: \"Категория\", ColumnName: \"CategoryName\", Visibility: true},\r\n        {Name: \"Изображение\", ColumnName: \"Image\", Visibility: true},\r\n        {Name: \"Отделения\", ColumnName: \"BranchesTable\", Visibility: true}\r\n    ],\r\n    Content: [\r\n    ],\r\n    Config: {\r\n        Add: true,\r\n        Details: false,\r\n        Change: true,\r\n        Delete: true\r\n    }\r\n  }\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n\t\r\n\tlet stateCopy = {...state};\r\n\t\r\n\tswitch (action.type) {\r\n    case \"SET_DATA_P\":{\r\n      stateCopy.InputForm.FormMainItems[3].Options = action.data.Category.map(el => {return {Key: el.Id, Data: el.Name}})\r\n      stateCopy.InputForm.FormMainItems[4].Options = action.data.Branches.map(el => {return {Key: el.Id, Data: el.Address}})\r\n\t\t\t\r\n      stateCopy.Table.Content = action.data.Products.map(el => {\r\n        return {\r\n          ...el, \r\n          Branches: action.data.BranchProducts.filter(elf => elf.IdProduct == el.Id).map(elm => elm.IdBranch), \r\n          BranchesTable: action.data.BranchProducts.filter(elf => elf.IdProduct == el.Id).map(elm => elm.Address).join(\"; \")\r\n        }\r\n      });\r\n\r\n      return stateCopy;\r\n\t\t}\r\n    case \"SET_INITIAL_VALUES_P\":{\r\n\r\n\t\t\tstateCopy.InputForm.initialValues = {...action.data, OldImage: action.data.Image};\r\n      return stateCopy;\r\n\t\t}\r\n\t\tdefault:{\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const actionCreator = {\r\n  setData: (data) => {\r\n    return {type: \"SET_DATA_P\", data: data};\r\n  },\r\n  setInitialValues: (data) => {\r\n      return {type: \"SET_INITIAL_VALUES_P\", data: data};\r\n  }\r\n}\r\n\r\nexport const ThunkCreator = {\r\n  Get: () => {\r\n    return (dispatch) => {\r\n      Api.Get().then((data) => {\r\n        dispatch(actionCreator.setData(data.Data));\r\n      });\r\n    }\r\n  },\r\n  Add: (Data) => {\r\n    let form = new FormData()\r\n    form.append(\"Image\", Data.Image)\r\n    form.append(\"OldImage\", Data.OldImage)\r\n    form.append(\"Name\", Data.Name)\r\n    form.append(\"Description\", Data.Description)\r\n    form.append(\"IdCategory\", Data.IdCategory)\r\n    form.append(\"Branches\", JSON.stringify(Data.Branches))\r\n\r\n    return (dispatch) => {\r\n      Api.Insert(form).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Change: (Data) => {\r\n    let form = new FormData()\r\n    form.append(\"Id\", Data.Id)\r\n    form.append(\"Image\", Data.Image)\r\n    form.append(\"OldImage\", Data.OldImage)\r\n    form.append(\"Name\", Data.Name)\r\n    form.append(\"Description\", Data.Description)\r\n    form.append(\"IdCategory\", Data.IdCategory)\r\n    form.append(\"Branches\", JSON.stringify(Data.Branches))\r\n\r\n    return (dispatch) => {\r\n      Api.Change(form).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Del: (Data) => {\r\n\r\n    return (dispatch) => {\r\n      Api.Delete(Data).then((response) => {\r\n        if(!response.Error){\r\n          Api.Get().then((data) => {\r\n            dispatch(actionCreator.setData(data.Data));\r\n          });\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Reducer\r\n\r\n","import {Options as Api} from '../../api/api.js';\r\nimport {NotificationsAC} from '../NotificationsReducer.js';\r\nimport {required} from '../Validates.js'\r\n\r\nlet initialState = {\r\n  InputForm: {\r\n    initialValues: {},\r\n    FormMainItems: [\r\n      {\r\n        ItemName: \"IdProduct\",\r\n        Explanations: \"Продукт\",\r\n        Type: \"Select\",\r\n        Options: [],\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Name\",\r\n        Explanations: \"Вариант\",\r\n        Type: \"Text\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Weight\",\r\n        Explanations: \"Вес\",\r\n        Type: \"Number\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Size\",\r\n        Explanations: \"Размер\",\r\n        Type: \"Number\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Price\",\r\n        Explanations: \"Цена\",\r\n        Type: \"Number\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Additive\",\r\n        Explanations: \"Количество добавок\",\r\n        Type: \"Number\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Additives\",\r\n        Explanations: \"Доступные добавки\",\r\n        Type: \"SelectMultiple\",\r\n        Options: [],\r\n        Validate: [required]\r\n      }\r\n    ]\r\n  },\r\n  Table:{\r\n    Title: [\r\n        {Name: \"Продукт\", ColumnName: \"Product\", Visibility: true},\r\n        {Name: \"Вариант\", ColumnName: \"Name\", Visibility: true},\r\n        {Name: \"Вес\", ColumnName: \"Weight\", Visibility: true},\r\n        {Name: \"Размер\", ColumnName: \"Size\", Visibility: true},\r\n        {Name: \"Цена\", ColumnName: \"Price\", Visibility: true},\r\n        {Name: \"Количестов добавок\", ColumnName: \"Additive\", Visibility: true},\r\n        {Name: \"Добавки\", ColumnName: \"AdditivesTable\", Visibility: true}\r\n    ],\r\n    Content: [\r\n    ],\r\n    Config: {\r\n        Add: true,\r\n        Details: false,\r\n        Change: true,\r\n        Delete: true\r\n    }\r\n  }\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n\t\r\n\tlet stateCopy = {...state};\r\n\t\r\n\tswitch (action.type) {\r\n    case \"SET_DATA_O\":{\r\n      stateCopy.InputForm.FormMainItems[0].Options = action.data.Products.map(el => {return {Key: el.Id, Data: el.Name}})\r\n\t\t\tstateCopy.InputForm.FormMainItems[6].Options = action.data.Additives.map(el => {return {Key: el.Id, Data: el.Name}})\r\n\t\t\t\r\n      stateCopy.Table.Content = action.data.ProductOption.map(el => {\r\n        return {\r\n          ...el, \r\n          Additives: action.data.ListAdditives.filter(elf => elf.IdProductOption == el.Id).map(elm => elm.IdAdditive), \r\n          AdditivesTable: action.data.ListAdditives.filter(elf => elf.IdProductOption == el.Id).map(elm => elm.AdditiveName).join(\"; \")\r\n        }\r\n      });\r\n\r\n      return stateCopy;\r\n\t\t}\r\n    case \"SET_INITIAL_VALUES_O\":{\r\n\r\n\t\t\tstateCopy.InputForm.initialValues = {...action.data};\r\n      return stateCopy;\r\n\t\t}\r\n\t\tdefault:{\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const actionCreator = {\r\n  setData: (data) => {\r\n    return {type: \"SET_DATA_O\", data: data};\r\n  },\r\n  setInitialValues: (data) => {\r\n      return {type: \"SET_INITIAL_VALUES_O\", data: data};\r\n  }\r\n}\r\n\r\nexport const ThunkCreator = {\r\n  Get: () => {\r\n    return (dispatch) => {\r\n      Api.Get().then((data) => {\r\n        dispatch(actionCreator.setData(data.Data));\r\n      });\r\n    }\r\n  },\r\n  Add: (Data) => {\r\n    return (dispatch) => {\r\n      Api.Insert(Data).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Change: (Data) => {\r\n    return (dispatch) => {\r\n      Api.Change(Data).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Del: (Data) => {\r\n    return (dispatch) => {\r\n      Api.Delete(Data).then((response) => {\r\n        if(!response.Error){\r\n          Api.Get().then((data) => {\r\n            dispatch(actionCreator.setData(data.Data));\r\n          });\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Reducer\r\n\r\n","import {Additives as Api} from '../../api/api.js';\r\nimport {NotificationsAC} from '../NotificationsReducer.js';\r\nimport {required} from '../Validates.js'\r\n\r\nlet initialState = {\r\n  InputForm: {\r\n    initialValues: {},\r\n    FormMainItems: [\r\n      {\r\n        ItemName: \"Name\",\r\n        Explanations: \"Название\",\r\n        Type: \"Text\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Image\",\r\n        Explanations: \"Изображение\",\r\n        Type: \"File\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Weight\",\r\n        Explanations: \"Вес\",\r\n        Type: \"Number\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Price\",\r\n        Explanations: \"Цена\",\r\n        Type: \"Number\",\r\n        Validate: [required]\r\n      }\r\n    ]\r\n  },\r\n  Table:{\r\n    Title: [\r\n      {Name: \"Название\", ColumnName: \"Name\", Visibility: true},\r\n      {Name: \"Изображение\", ColumnName: \"Image\", Visibility: true},\r\n      {Name: \"Вес\", ColumnName: \"Weight\", Visibility: true},\r\n      {Name: \"Цена\", ColumnName: \"Number\", Visibility: true}\r\n    ],\r\n    Content: [\r\n      ],\r\n    Config: {\r\n      Add: true,\r\n      Details: false,\r\n      Change: true,\r\n      Delete: true\r\n    }\r\n  }\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n\t\r\n\tlet stateCopy = {...state};\r\n\t\r\n\tswitch (action.type) {\r\n    case \"SET_DATA_A\":{\r\n\t\t\tstateCopy.Table.Content = action.data;\r\n      return stateCopy;\r\n\t\t}\r\n    case \"SET_INITIAL_VALUES_A\":{\r\n\t\t\tstateCopy.InputForm.initialValues = {...action.data, OldImage: action.data.Image};\r\n      return stateCopy;\r\n\t\t}\r\n\t\tdefault:{\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const actionCreator = {\r\n  setData: (data) => {\r\n    return {type: \"SET_DATA_A\", data: data};\r\n  },\r\n  setInitialValues: (data) => {\r\n      return {type: \"SET_INITIAL_VALUES_A\", data: data};\r\n  }\r\n}\r\n\r\nexport const ThunkCreator = {\r\n  Get: () => {\r\n    return (dispatch) => {\r\n      Api.Get().then((data) => {\r\n        dispatch(actionCreator.setData(data.Data));\r\n      });\r\n    }\r\n  },\r\n  Add: (Data) => {\r\n    let form = new FormData()\r\n    form.append(\"Image\", Data.Image)\r\n    form.append(\"Name\", Data.Name)\r\n    form.append(\"Weight\", Data.Weight)\r\n    form.append(\"Price\", Data.Price)\r\n\r\n    return (dispatch) => {\r\n      Api.Insert(form).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Change: (Data) => {\r\n    let form = new FormData()\r\n    form.append(\"Id\", Data.Id)\r\n    form.append(\"Image\", Data.Image)\r\n    form.append(\"OldImage\", Data.OldImage)\r\n    form.append(\"Name\", Data.Name)\r\n    form.append(\"Weight\", Data.Weight)\r\n    form.append(\"Price\", Data.Price)\r\n\r\n    return (dispatch) => {\r\n      Api.Change(form).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Del: (Data) => {\r\n    return (dispatch) => {\r\n      Api.Delete(Data).then((response) => {\r\n        if(!response.Error){\r\n          Api.Get().then((data) => {\r\n            dispatch(actionCreator.setData(data.Data));\r\n          });\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Reducer\r\n\r\n","import {Category as Api} from '../../api/api.js';\r\nimport {NotificationsAC} from '../NotificationsReducer.js';\r\nimport {required} from '../Validates.js'\r\n\r\nlet initialState = {\r\n  InputForm: {\r\n    initialValues: {},\r\n    FormMainItems: [\r\n      {\r\n        ItemName: \"Name\",\r\n        Explanations: \"Название\",\r\n        Type: \"Text\",\r\n        Validate: [required]\r\n      }\r\n    ]\r\n  },\r\n  Table:{\r\n    Title: [\r\n      {Name: \"Название\", ColumnName: \"Name\", Visibility: true}\r\n    ],\r\n    Content: [\r\n      ],\r\n    Config: {\r\n      Add: true,\r\n      Details: false,\r\n      Change: true,\r\n      Delete: true\r\n    }\r\n  }\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n\t\r\n\tlet stateCopy = {...state};\r\n\t\r\n\tswitch (action.type) {\r\n    case \"SET_DATA_CAT\":{\r\n\t\t\tstateCopy.Table.Content = action.data;\r\n      return stateCopy;\r\n\t\t}\r\n    case \"SET_INITIAL_VALUES_CAT\":{\r\n\t\t\tstateCopy.InputForm.initialValues = {...action.data};\r\n      return stateCopy;\r\n\t\t}\r\n\t\tdefault:{\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const actionCreator = {\r\n  setData: (data) => {\r\n    return {type: \"SET_DATA_CAT\", data: data};\r\n  },\r\n  setInitialValues: (data) => {\r\n      return {type: \"SET_INITIAL_VALUES_CAT\", data: data};\r\n  }\r\n}\r\n\r\nexport const ThunkCreator = {\r\n  Get: () => {\r\n    return (dispatch) => {\r\n      Api.Get().then((data) => {\r\n        dispatch(actionCreator.setData(data.Data));\r\n      });\r\n    }\r\n  },\r\n  Add: (Data) => {\r\n    return (dispatch) => {\r\n      Api.Insert(Data).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Change: (Data) => {\r\n    return (dispatch) => {\r\n      Api.Change(Data).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Del: (Data) => {\r\n\r\n    return (dispatch) => {\r\n      Api.Delete(Data).then((response) => {\r\n        if(!response.Error){\r\n          Api.Get().then((data) => {\r\n            dispatch(actionCreator.setData(data.Data));\r\n          });\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Reducer\r\n\r\n","import {Stocks as Api} from '../../api/api.js';\r\nimport {NotificationsAC} from '../NotificationsReducer.js';\r\nimport {required} from '../Validates.js'\r\n\r\nlet initialState = {\r\n  InputForm: {\r\n    initialValues: {},\r\n    FormMainItems: [\r\n      {\r\n        ItemName: \"Name\",\r\n        Explanations: \"Название\",\r\n        Type: \"Text\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"DateBegin\",\r\n        Explanations: \"Начало работа\",\r\n        Type: \"Number\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"DateEnd\",\r\n        Explanations: \"Конец работы\",\r\n        Type: \"Number\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Image\",\r\n        Explanations: \"Изображение\",\r\n        Type: \"File\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"PromoCode\",\r\n        Explanations: \"Промокод\",\r\n        Type: \"Text\",\r\n        Validate: [required]\r\n      }\r\n    ]\r\n  },\r\n  Table:{\r\n    Title: [\r\n      {Name: \"Название\", ColumnName: \"Name\", Visibility: true},\r\n      {Name: \"Начало работа\", ColumnName: \"DateEnd\", Visibility: true},\r\n      {Name: \"Конец работы\", ColumnName: \"DateEnd\", Visibility: true},\r\n      {Name: \"Изображение\", ColumnName: \"Image\", Visibility: true},\r\n      {Name: \"Промокод\", ColumnName: \"PromoCode\", Visibility: true}\r\n    ],\r\n    Content: [\r\n      ],\r\n    Config: {\r\n      Add: true,\r\n      Details: false,\r\n      Change: true,\r\n      Delete: true\r\n    }\r\n  }\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n\t\r\n\tlet stateCopy = {...state};\r\n\t\r\n\tswitch (action.type) {\r\n    case \"SET_DATA_STOCK\":{\r\n\t\t\tstateCopy.Table.Content = action.data;\r\n      return stateCopy;\r\n\t\t}\r\n    case \"SET_INITIAL_VALUES_STOCK\":{\r\n\t\t\tstateCopy.InputForm.initialValues = {...action.data, OldImage: action.data.Image};\r\n      return stateCopy;\r\n\t\t}\r\n\t\tdefault:{\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const actionCreator = {\r\n  setData: (data) => {\r\n    return {type: \"SET_DATA_STOCK\", data: data};\r\n  },\r\n  setInitialValues: (data) => {\r\n      return {type: \"SET_INITIAL_VALUES_STOCK\", data: data};\r\n  }\r\n}\r\n\r\nexport const ThunkCreator = {\r\n  Get: () => {\r\n    return (dispatch) => {\r\n      Api.Get().then((data) => {\r\n        dispatch(actionCreator.setData(data.Data));\r\n      });\r\n    }\r\n  },\r\n  Add: (Data) => {\r\n    let form = new FormData()\r\n    form.append(\"Image\", Data.Image)\r\n    form.append(\"OldImage\", Data.OldImage)\r\n    form.append(\"Name\", Data.Name)\r\n    form.append(\"DateBegin\", Data.DateBegin)\r\n    form.append(\"DateEnd\", Data.DateEnd)\r\n    form.append(\"PromoCode\", Data.PromoCode)\r\n\r\n    return (dispatch) => {\r\n      Api.Insert(form).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Change: (Data) => {\r\n    let form = new FormData()\r\n    form.append(\"Id\", Data.Id)\r\n    form.append(\"Image\", Data.Image)\r\n    form.append(\"OldImage\", Data.OldImage)\r\n    form.append(\"Name\", Data.Name)\r\n    form.append(\"DateBegin\", Data.DateBegin)\r\n    form.append(\"DateEnd\", Data.DateEnd)\r\n    form.append(\"PromoCode\", Data.PromoCode)\r\n\r\n    return (dispatch) => {\r\n      Api.Change(form).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Del: (Data) => {\r\n    return (dispatch) => {\r\n      Api.Delete(Data).then((response) => {\r\n        if(!response.Error){\r\n          Api.Get().then((data) => {\r\n            dispatch(actionCreator.setData(data.Data));\r\n          });\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Reducer\r\n\r\n","import {User as Api} from '../../api/api.js';\r\nimport {NotificationsAC} from '../NotificationsReducer.js';\r\nimport {required} from '../Validates.js'\r\n\r\nlet initialState = {\r\n  InputForm: {\r\n    initialValues: {},\r\n    FormMainItems: [\r\n      {\r\n        ItemName: \"Name\",\r\n        Explanations: \"Название\",\r\n        Type: \"Text\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Phone\",\r\n        Explanations: \"Телефон\",\r\n        Type: \"Phone\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Password\",\r\n        Explanations: \"Пароль\",\r\n        Type: \"Password\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Points\",\r\n        Explanations: \"Баланс\",\r\n        Type: \"Number\",\r\n        Validate: [required]\r\n      }\r\n    ]\r\n  },\r\n  Table:{\r\n    Title: [\r\n      {Name: \"Название\", ColumnName: \"Name\", Visibility: true},\r\n      {Name: \"Телефон\", ColumnName: \"Phone\", Visibility: true},\r\n      {Name: \"Уровень\", ColumnName: \"LevelName\", Visibility: true},\r\n      {Name: \"Кешбэк\", ColumnName: \"Сashback\", Visibility: true},\r\n      {Name: \"Баланс\", ColumnName: \"Points\", Visibility: true}\r\n    ],\r\n    Content: [\r\n      ],\r\n    Config: {\r\n      Add: true,\r\n      Details: false,\r\n      Change: true,\r\n      Delete: true\r\n    }\r\n  }\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n\t\r\n\tlet stateCopy = {...state};\r\n\t\r\n\tswitch (action.type) {\r\n    case \"SET_DATA_User\":{\r\n\t\t\tstateCopy.Table.Content = action.data.Users;\r\n      return stateCopy;\r\n\t\t}\r\n    case \"SET_INITIAL_VALUES_User\":{\r\n\t\t\tstateCopy.InputForm.initialValues = {...action.data};\r\n      return stateCopy;\r\n\t\t}\r\n\t\tdefault:{\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const actionCreator = {\r\n  setData: (data) => {\r\n    return {type: \"SET_DATA_User\", data: data};\r\n  },\r\n  setInitialValues: (data) => {\r\n      return {type: \"SET_INITIAL_VALUES_User\", data: data};\r\n  }\r\n}\r\n\r\nexport const ThunkCreator = {\r\n  Get: () => {\r\n    return (dispatch) => {\r\n      Api.Get().then((data) => {\r\n        dispatch(actionCreator.setData(data.Data));\r\n      });\r\n    }\r\n  },\r\n  Add: (Data) => {\r\n    let temp = {...Data, Addresses: [], IdRole: null, IdLevel: null}\r\n    return (dispatch) => {\r\n      Api.Insert(temp).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Change: (Data) => {\r\n    let temp = {...Data, Addresses: [], IdRole: null, IdLevel: null}\r\n    return (dispatch) => {\r\n      Api.Change(temp).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Del: (Data) => {\r\n    console.log(Data)\r\n    return (dispatch) => {\r\n      Api.Delete(Data).then((response) => {\r\n        if(!response.Error){\r\n          Api.Get().then((data) => {\r\n            dispatch(actionCreator.setData(data.Data));\r\n          });\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Reducer\r\n\r\n","import {Cooperations as Api} from '../../api/api.js';\r\nimport {NotificationsAC} from '../NotificationsReducer.js';\r\nimport {required} from '../Validates.js'\r\n\r\nlet initialState = {\r\n  InputForm: {\r\n    initialValues: {},\r\n    FormMainItems: [\r\n      {\r\n        ItemName: \"Link\",\r\n        Explanations: \"Ссылка\",\r\n        Type: \"Text\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Image\",\r\n        Explanations: \"Изображение\",\r\n        Type: \"File\",\r\n        Validate: [required]\r\n      }\r\n    ]\r\n  },\r\n  Table:{\r\n    Title: [\r\n      {Name: \"Ссылка\", ColumnName: \"Link\", Visibility: true},\r\n      {Name: \"Изображение\", ColumnName: \"Image\", Visibility: true}\r\n    ],\r\n    Content: [\r\n      ],\r\n    Config: {\r\n      Add: true,\r\n      Details: false,\r\n      Change: true,\r\n      Delete: true\r\n    }\r\n  }\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n\t\r\n\tlet stateCopy = {...state};\r\n\t\r\n\tswitch (action.type) {\r\n    case \"SET_DATA_COOP\":{\r\n\t\t\tstateCopy.Table.Content = action.data;\r\n      return stateCopy;\r\n\t\t}\r\n    case \"SET_INITIAL_VALUES_COOP\":{\r\n\t\t\tstateCopy.InputForm.initialValues = {...action.data, OldImage: action.data.Image};\r\n      return stateCopy;\r\n\t\t}\r\n\t\tdefault:{\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const actionCreator = {\r\n  setData: (data) => {\r\n    return {type: \"SET_DATA_COOP\", data: data};\r\n  },\r\n  setInitialValues: (data) => {\r\n      return {type: \"SET_INITIAL_VALUES_COOP\", data: data};\r\n  }\r\n}\r\n\r\nexport const ThunkCreator = {\r\n  Get: () => {\r\n    return (dispatch) => {\r\n      Api.Get().then((data) => {\r\n        dispatch(actionCreator.setData(data.Data));\r\n      });\r\n    }\r\n  },\r\n  Add: (Data) => {\r\n    let form = new FormData()\r\n    form.append(\"Image\", Data.Image)\r\n    form.append(\"Link\", Data.Link)\r\n\r\n    return (dispatch) => {\r\n      Api.Insert(form).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Change: (Data) => {\r\n    let form = new FormData()\r\n    form.append(\"Id\", Data.Id)\r\n    form.append(\"Image\", Data.Image)\r\n    form.append(\"OldImage\", Data.OldImage)\r\n    form.append(\"Link\", Data.Link)\r\n\r\n    return (dispatch) => {\r\n      Api.Change(form).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Del: (Data) => {\r\n    return (dispatch) => {\r\n      Api.Delete(Data).then((response) => {\r\n        if(!response.Error){\r\n          Api.Get().then((data) => {\r\n            dispatch(actionCreator.setData(data.Data));\r\n          });\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Reducer\r\n\r\n","import {Contacts as Api} from '../../api/api.js';\r\nimport {NotificationsAC} from '../NotificationsReducer.js';\r\nimport {required} from '../Validates.js'\r\n\r\nlet initialState = {\r\n  InputForm: {\r\n    initialValues: {},\r\n    FormMainItems: [\r\n      {\r\n        ItemName: \"Text\",\r\n        Explanations: \"Текст\",\r\n        Type: \"Text\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Image\",\r\n        Explanations: \"Изображение\",\r\n        Type: \"File\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Link\",\r\n        Explanations: \"Ссылка\",\r\n        Type: \"Text\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Description\",\r\n        Explanations: \"Описание\",\r\n        Type: \"TextArea\",\r\n        Validate: [required]\r\n      }\r\n    ]\r\n  },\r\n  Table:{\r\n    Title: [\r\n      {Name: \"Текст\", ColumnName: \"Text\", Visibility: true},\r\n      {Name: \"Изображение\", ColumnName: \"Icon\", Visibility: true},\r\n      {Name: \"Ссылка\", ColumnName: \"Link\", Visibility: true},\r\n      {Name: \"Описание\", ColumnName: \"Description\", Visibility: true}\r\n    ],\r\n    Content: [\r\n      ],\r\n    Config: {\r\n      Add: true,\r\n      Details: false,\r\n      Change: true,\r\n      Delete: true\r\n    }\r\n  }\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n\t\r\n\tlet stateCopy = {...state};\r\n\t\r\n\tswitch (action.type) {\r\n    case \"SET_DATA_CON\":{\r\n\t\t\tstateCopy.Table.Content = action.data;\r\n      return stateCopy;\r\n\t\t}\r\n    case \"SET_INITIAL_VALUES_CON\":{\r\n\t\t\tstateCopy.InputForm.initialValues = {...action.data, OldImage: action.data.Image};\r\n      return stateCopy;\r\n\t\t}\r\n\t\tdefault:{\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const actionCreator = {\r\n  setData: (data) => {\r\n    return {type: \"SET_DATA_CON\", data: data};\r\n  },\r\n  setInitialValues: (data) => {\r\n      return {type: \"SET_INITIAL_VALUES_CON\", data: data};\r\n  }\r\n}\r\n\r\nexport const ThunkCreator = {\r\n  Get: () => {\r\n    return (dispatch) => {\r\n      Api.Get().then((data) => {\r\n        dispatch(actionCreator.setData(data.Data));\r\n      });\r\n    }\r\n  },\r\n  Add: (Data) => {\r\n    let form = new FormData()\r\n    form.append(\"Image\", Data.Image)\r\n    form.append(\"Text\", Data.Text)\r\n    form.append(\"Link\", Data.Link)\r\n    form.append(\"Description\", Data.Description)\r\n\r\n    return (dispatch) => {\r\n      Api.Insert(form).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Change: (Data) => {\r\n    let form = new FormData()\r\n    form.append(\"Id\", Data.Id)\r\n    form.append(\"Image\", Data.Image)\r\n    form.append(\"OldImage\", Data.OldImage)\r\n    form.append(\"Text\", Data.Text)\r\n    form.append(\"Link\", Data.Link)\r\n    form.append(\"Description\", Data.Description)\r\n\r\n    return (dispatch) => {\r\n      Api.Change(form).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Del: (Data) => {\r\n    return (dispatch) => {\r\n      Api.Delete(Data).then((response) => {\r\n        if(!response.Error){\r\n          Api.Get().then((data) => {\r\n            dispatch(actionCreator.setData(data.Data));\r\n          });\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Reducer\r\n\r\n","import {Comments as Api} from '../../api/api.js';\r\nimport {NotificationsAC} from '../NotificationsReducer.js';\r\nimport {required} from '../Validates.js'\r\n\r\nlet initialState = {\r\n  InputForm: {\r\n    initialValues: {},\r\n    FormMainItems: [\r\n      {\r\n        ItemName: \"Date\",\r\n        Explanations: \"Дата\",\r\n        Type: \"Date\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Image\",\r\n        Explanations: \"Изображение\",\r\n        Type: \"File\",\r\n        Validate: [required]\r\n      }\r\n    ]\r\n  },\r\n  Table:{\r\n    Title: [\r\n      {Name: \"Дата\", ColumnName: \"Date\", Visibility: true},\r\n      {Name: \"Изображение\", ColumnName: \"Image\", Visibility: true}\r\n    ],\r\n    Content: [\r\n      ],\r\n    Config: {\r\n      Add: true,\r\n      Details: false,\r\n      Change: true,\r\n      Delete: true\r\n    }\r\n  }\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n\t\r\n\tlet stateCopy = {...state};\r\n\t\r\n\tswitch (action.type) {\r\n    case \"SET_DATA_COM\":{\r\n\t\t\tstateCopy.Table.Content = action.data;\r\n      return stateCopy;\r\n\t\t}\r\n    case \"SET_INITIAL_VALUES_COM\":{\r\n\t\t\tstateCopy.InputForm.initialValues = {...action.data, OldImage: action.data.Image};\r\n      return stateCopy;\r\n\t\t}\r\n\t\tdefault:{\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const actionCreator = {\r\n  setData: (data) => {\r\n    return {type: \"SET_DATA_COM\", data: data};\r\n  },\r\n  setInitialValues: (data) => {\r\n      return {type: \"SET_INITIAL_VALUES_COM\", data: data};\r\n  }\r\n}\r\n\r\nexport const ThunkCreator = {\r\n  Get: () => {\r\n    return (dispatch) => {\r\n      Api.Get().then((data) => {\r\n        dispatch(actionCreator.setData(data.Data));\r\n      });\r\n    }\r\n  },\r\n  Add: (Data) => {\r\n    let form = new FormData()\r\n    form.append(\"Image\", Data.Image)\r\n    form.append(\"Date\", Data.Date)\r\n\r\n    return (dispatch) => {\r\n      Api.Insert(form).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Change: (Data) => {\r\n    let form = new FormData()\r\n    form.append(\"Id\", Data.Id)\r\n    form.append(\"Image\", Data.Image)\r\n    form.append(\"OldImage\", Data.OldImage)\r\n    form.append(\"Date\", Data.Date)\r\n\r\n    return (dispatch) => {\r\n      Api.Change(form).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Del: (Data) => {\r\n    return (dispatch) => {\r\n      Api.Delete(Data).then((response) => {\r\n        if(!response.Error){\r\n          Api.Get().then((data) => {\r\n            dispatch(actionCreator.setData(data.Data));\r\n          });\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Reducer\r\n\r\n","import {Levels as Api} from '../../api/api.js';\r\nimport {NotificationsAC} from '../NotificationsReducer.js';\r\nimport {required} from '../Validates.js'\r\n\r\nlet initialState = {\r\n  InputForm: {\r\n    initialValues: {},\r\n    FormMainItems: [\r\n      {\r\n        ItemName: \"Name\",\r\n        Explanations: \"Название\",\r\n        Type: \"Text\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Сashback\",\r\n        Explanations: \"Процент кешбэка\",\r\n        Type: \"Number\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Border\",\r\n        Explanations: \"Граница перехода\",\r\n        Type: \"Number\",\r\n        Validate: [required]\r\n      }\r\n    ]\r\n  },\r\n  Table:{\r\n    Title: [\r\n      {Name: \"Название\", ColumnName: \"Name\", Visibility: true},\r\n      {Name: \"Процент кешбэка\", ColumnName: \"Сashback\", Visibility: true},\r\n      {Name: \"Граница перехода\", ColumnName: \"Border\", Visibility: true}\r\n    ],\r\n    Content: [\r\n      ],\r\n    Config: {\r\n      Add: true,\r\n      Details: false,\r\n      Change: true,\r\n      Delete: true\r\n    }\r\n  }\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n\t\r\n\tlet stateCopy = {...state};\r\n\t\r\n\tswitch (action.type) {\r\n    case \"SET_DATA_LEVEL\":{\r\n\t\t\tstateCopy.Table.Content = action.data;\r\n      return stateCopy;\r\n\t\t}\r\n    case \"SET_INITIAL_VALUES_LEVEL\":{\r\n\t\t\tstateCopy.InputForm.initialValues = {...action.data};\r\n      return stateCopy;\r\n\t\t}\r\n\t\tdefault:{\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const actionCreator = {\r\n  setData: (data) => {\r\n    return {type: \"SET_DATA_LEVEL\", data: data};\r\n  },\r\n  setInitialValues: (data) => {\r\n      return {type: \"SET_INITIAL_VALUES_LEVEL\", data: data};\r\n  }\r\n}\r\n\r\nexport const ThunkCreator = {\r\n  Get: () => {\r\n    return (dispatch) => {\r\n      Api.Get().then((data) => {\r\n        dispatch(actionCreator.setData(data.Data));\r\n      });\r\n    }\r\n  },\r\n  Add: (Data) => {\r\n    return (dispatch) => {\r\n      Api.Insert(Data).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Change: (Data) => {\r\n    return (dispatch) => {\r\n      Api.Change(Data).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Del: (Data) => {\r\n\r\n    return (dispatch) => {\r\n      Api.Delete(Data).then((response) => {\r\n        if(!response.Error){\r\n          Api.Get().then((data) => {\r\n            dispatch(actionCreator.setData(data.Data));\r\n          });\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Reducer\r\n\r\n","import {Branches as Api} from '../../api/api.js';\r\nimport {NotificationsAC} from '../NotificationsReducer.js';\r\nimport {required} from '../Validates.js'\r\n\r\nlet initialState = {\r\n  InputForm: {\r\n    initialValues: {},\r\n    FormMainItems: [\r\n      {\r\n        ItemName: \"Address\",\r\n        Explanations: \"Адрес\",\r\n        Type: \"Text\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"DeliveryArea\",\r\n        Explanations: \"Площадь покрытия\",\r\n        Type: \"Text\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"Begin\",\r\n        Explanations: \"Начало работы (час)\",\r\n        Type: \"Number\",\r\n        Validate: [required]\r\n      },\r\n      {\r\n        ItemName: \"End\",\r\n        Explanations: \"Конец работы (час)\",\r\n        Type: \"Number\",\r\n        Validate: [required]\r\n      },\r\n    ]\r\n  },\r\n  Table:{\r\n    Title: [\r\n      {Name: \"Адрес\", ColumnName: \"Address\", Visibility: true},\r\n      {Name: \"Площадь покрытия\", ColumnName: \"DeliveryArea\", Visibility: false},\r\n      {Name: \"Начало работы (час)\", ColumnName: \"Begin\", Visibility: true},\r\n      {Name: \"АдКонец работы (час)рес\", ColumnName: \"End\", Visibility: true}\r\n    ],\r\n    Content: [\r\n      ],\r\n    Config: {\r\n      Add: true,\r\n      Details: false,\r\n      Change: true,\r\n      Delete: true\r\n    }\r\n  }\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n\t\r\n\tlet stateCopy = {...state};\r\n\t\r\n\tswitch (action.type) {\r\n    case \"SET_DATA_B\":{\r\n\t\t\tstateCopy.Table.Content = action.data;\r\n      return stateCopy;\r\n\t\t}\r\n    case \"SET_INITIAL_VALUES_B\":{\r\n\t\t\tstateCopy.InputForm.initialValues = {...action.data};\r\n      return stateCopy;\r\n\t\t}\r\n\t\tdefault:{\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const actionCreator = {\r\n  setData: (data) => {\r\n    return {type: \"SET_DATA_B\", data: data};\r\n  },\r\n  setInitialValues: (data) => {\r\n      return {type: \"SET_INITIAL_VALUES_B\", data: data};\r\n  }\r\n}\r\n\r\nexport const ThunkCreator = {\r\n  Get: () => {\r\n    return (dispatch) => {\r\n      Api.Get().then((data) => {\r\n        dispatch(actionCreator.setData(data.Data));\r\n      });\r\n    }\r\n  },\r\n  Add: (Data) => {\r\n    return (dispatch) => {\r\n      Api.Insert(Data).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Change: (Data) => {\r\n    return (dispatch) => {\r\n      Api.Change(Data).then((response) => {\r\n        if(!response.Error){\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  Del: (Data) => {\r\n\r\n    return (dispatch) => {\r\n      Api.Delete(Data).then((response) => {\r\n        if(!response.Error){\r\n          Api.Get().then((data) => {\r\n            dispatch(actionCreator.setData(data.Data));\r\n          });\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Message\", Message: response.Message}));\r\n        }else{\r\n          dispatch(NotificationsAC.SetNotification({Type: \"Error\", Message: response.Message}));\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Reducer\r\n\r\n","import React from 'react';\r\nimport s from'./ManagerPanel.module.css';\r\nimport {Route} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport NavBar from './NavBar/NavBar.jsx';\r\nimport Content from './Content.jsx';\r\n\r\nimport {actionCreator as PAC, ThunkCreator as PTC} from '../../redux/ManagerReducers/Products'\r\nimport {actionCreator as OAC, ThunkCreator as OTC} from '../../redux/ManagerReducers/Options'\r\nimport {actionCreator as AAC, ThunkCreator as ATC} from '../../redux/ManagerReducers/Additives'\r\nimport {actionCreator as CAC, ThunkCreator as CTC} from '../../redux/ManagerReducers/Category'\r\nimport {actionCreator as StocksAC, ThunkCreator as StocksTC} from '../../redux/ManagerReducers/Stocks'\r\n\r\nimport {actionCreator as UsersAC, ThunkCreator as UsersTC} from '../../redux/ManagerReducers/Users'\r\n\r\nimport {actionCreator as CooperationsAC, ThunkCreator as CooperationsTC} from '../../redux/ManagerReducers/Cooperations'\r\nimport {actionCreator as ContactsAC, ThunkCreator as ContactsTC} from '../../redux/ManagerReducers/Contacts'\r\nimport {actionCreator as CommentsAC, ThunkCreator as CommentsTC} from '../../redux/ManagerReducers/Comments'\r\nimport {actionCreator as LevelsAC, ThunkCreator as LevelsTC} from '../../redux/ManagerReducers/Levels'\r\n\r\nimport {actionCreator as BAC, ThunkCreator as BTC} from '../../redux/ManagerReducers/Branches'\r\n\r\nconst ManagerPanel = (props) => {\r\n  return (\r\n\t<div className={s.ManagerPanel}>\r\n\t\t<NavBar NavBar={props.NavBar}/>\r\n    <Route path=\"/Menu/Products\" render={() => \r\n      <Content \r\n        path=\"/Menu/Products\"\r\n        data={props.Products} \r\n        dispatch={props.dispatch} \r\n        methods={{actionCreator: PAC, ThunkCreator: PTC}} \r\n        formName={\"ProductForm\"} \r\n        Name={\"Товары\"}\r\n        Search={\"Name\"}\r\n      />}/>\r\n    <Route path=\"/Menu/Options\" render={() => \r\n      <Content \r\n        path=\"/Menu/Options\"\r\n        data={props.Options} \r\n        dispatch={props.dispatch} \r\n        methods={{actionCreator: OAC, ThunkCreator: OTC}} \r\n        formName={\"OptionForm\"} \r\n        Name={\"Варианты\"}\r\n        Search={\"Product\"}\r\n      />}/>\r\n    <Route path=\"/Menu/Additives\" render={() => \r\n      <Content \r\n        path=\"/Menu/Additives\" \r\n        data={props.Additives} \r\n        dispatch={props.dispatch} \r\n        methods={{actionCreator: AAC, ThunkCreator: ATC}} \r\n        formName={\"AdditiveForm\"} \r\n        Name={\"Добавки\"} \r\n        Search={\"Name\"}\r\n      />}/>\r\n    <Route path=\"/Menu/Categories\" render={() => \r\n      <Content \r\n        path=\"/Menu/Categories\" \r\n        data={props.Category} \r\n        dispatch={props.dispatch} \r\n        methods={{actionCreator: CAC, ThunkCreator: CTC}} \r\n        formName={\"CategoryForm\"} \r\n        Name={\"Категории\"} \r\n        Search={\"Name\"}\r\n      />}/>\r\n    <Route path=\"/Menu/Stocks\" render={() => \r\n      <Content \r\n        path=\"/Menu/Stocks\" \r\n        data={props.Stocks} \r\n        dispatch={props.dispatch} \r\n        methods={{actionCreator: StocksAC, ThunkCreator: StocksTC}} \r\n        formName={\"StockFormЫ\"} \r\n        Name={\"Акции\"} \r\n        Search={\"Name\"}\r\n      />}/>\r\n    <Route path=\"/Other/Comments\" render={() => \r\n      <Content \r\n        path=\"/Other/Comments\" \r\n        data={props.Comments}\r\n        dispatch={props.dispatch}\r\n        methods={{actionCreator: CommentsAC, ThunkCreator: CommentsTC}} \r\n        formName={\"CommentForm\"} \r\n        Name={\"Уровни\"} \r\n        Search={\"Date\"}\r\n      />}/>\r\n    <Route path=\"/Other/Contacts\" render={() => \r\n      <Content \r\n        path=\"/Other/Contacts\" \r\n        data={props.Contacts}\r\n        dispatch={props.dispatch}\r\n        methods={{actionCreator: ContactsAC, ThunkCreator: ContactsTC}} \r\n        formName={\"ContactForm\"} \r\n        Name={\"Контакты\"}\r\n        Search={\"Text\"}\r\n      />}/>\r\n    <Route path=\"/Other/Cooperation\" render={() => \r\n      <Content \r\n        path=\"/Other/Cooperation\" \r\n        data={props.Cooperations}\r\n        dispatch={props.dispatch}\r\n        methods={{actionCreator: CooperationsAC, ThunkCreator: CooperationsTC}} \r\n        formName={\"CooperationForm\"} \r\n        Name={\"Кооперации\"} \r\n        Search={\"Link\"}\r\n      />}/>\r\n    <Route path=\"/Other/Levels\" render={() => \r\n      <Content \r\n        path=\"/Other/Levels\" \r\n        data={props.Levels}\r\n        dispatch={props.dispatch}\r\n        methods={{actionCreator: LevelsAC, ThunkCreator: LevelsTC}} \r\n        formName={\"LevelForm\"} \r\n        Name={\"Уровни\"} \r\n        Search={\"Name\"}\r\n      />}/>\r\n    <Route path=\"/Access/Workers\" render={() => \r\n      <Content \r\n        path=\"/Access/Workers\" \r\n        data={props.Users} \r\n        dispatch={props.dispatch} \r\n        methods={{actionCreator: UsersAC, ThunkCreator: UsersTC}} \r\n        formName={\"UserFormЫ\"} \r\n        Name={\"Пользователи\"} \r\n        Search={\"Name\"}\r\n      />}/>\r\n    <Route path=\"/Settings/Branches\" render={() => \r\n      <Content \r\n        path=\"/Settings/Branches\" \r\n        data={props.Branches} \r\n        dispatch={props.dispatch} \r\n        methods={{actionCreator: BAC, ThunkCreator: BTC}} \r\n        formName={\"BranchForm\"} \r\n        Name={\"Отделы\"} \r\n        Search={\"Address\"}\r\n      />}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tNavBar: state.NavBar,\r\n    Branches: state.Branches,\r\n    Additives: state.Additives,\r\n    Products: state.Products,\r\n    Options: state.Options,\r\n    Category: state.Category,\r\n    Stocks: state.Stocks,\r\n    Users: state.Users,\r\n    Levels: state.Levels,\r\n    Comments: state.Comments,\r\n    Contacts: state.Contacts,\r\n    Cooperations: state.Cooperations\r\n\t}\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n    dispatch: dispatch\r\n\t}\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ManagerPanel));","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport s from'./Notifications.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {NotificationsAC} from '../../redux/NotificationsReducer.js';\r\n\r\nclass Notifications extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\trender(){\r\n        if(this.props.Notifications.length > 0){\r\n            setTimeout(() => this.props.Delete(0), 5000);\r\n        }\r\n        console.log(this.props.Notifications)\r\n        return (\r\n            <div className={s.Notification}>\r\n                {this.props.Notifications.map((el, ind) => {\r\n                    return (\r\n                        <div \r\n                            key={uuidv4()}  \r\n                            className={s.Message} style={{backgroundColor: (el.Type === \"Message\")? \"rgba(93, 206, 0, 1)\": \"rgba(255, 69, 69, 1)\"}} onClick={() => this.props.Delete(ind)}>\r\n                            {el.Message}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n\t   )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n        Notifications: state.Notifications.List\r\n\t}\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n        Delete: (ind) => {\r\n            dispatch(NotificationsAC.DeleteNotification(ind));\r\n        }\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications);","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport './App.css';\nimport AuthForm from './components/AuthForm/AuthForm';\nimport ManagerPanel from './components/ManagerPanel/ManagerPanel';\nimport Notifications from './components/Notifications/Notifications.jsx';\n\nconst App = (props) =>{\n  return (\n    <div className=\"App\">\n      <Notifications/>\n      {sessionStorage.getItem(\"Token\")? <ManagerPanel/>: <AuthForm/>}\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n\tLinkGroups:[\r\n        {\r\n            Links: [\r\n                {Link: \"/Statistics/Checks\", Name: \"Чеки\"}\r\n            ],\r\n            Title: \"Статистика\",\r\n            Key: \"Statistics\",\r\n            Icon: \"Statistics.svg\"\r\n        },\r\n        {\r\n            Links: [\r\n                {Link: \"/Menu/Products\", Name: \"Товары\"},\r\n                {Link: \"/Menu/Options\", Name: \"Варианты товара\"},\r\n                {Link: \"/Menu/Additives\", Name: \"Добавки\"},\r\n                {Link: \"/Menu/Categories\", Name: \"Категории товаров\"},\r\n                {Link: \"/Menu/Stocks\", Name: \"Акции\"}\r\n            ],\r\n            Title: \"Меню\",\r\n            Key: \"Menu\",\r\n            Icon: \"Menu.svg\"\r\n        },\r\n        {\r\n            Links: [\r\n                {Link: \"/Other/Comments\", Name: \"Отзывы\"},\r\n                {Link: \"/Other/Contacts\", Name: \"Контакты\"},\r\n                {Link: \"/Other/Cooperation\", Name: \"Кооперация\"},\r\n                {Link: \"/Other/Levels\", Name: \"Уровни\"}\r\n            ],\r\n            Title: \"Всякое\",\r\n            Key: \"Other\",\r\n            Icon: \"Menu.svg\"\r\n        },\r\n        {\r\n            Links: [\r\n                {Link: \"/Access/Workers\", Name: \"Сотрудники\"}\r\n            ],\r\n            Title: \"Доступ\",\r\n            Key: \"Access\",\r\n            Icon: \"Structure.svg\"\r\n        },\r\n        {\r\n            Links: [\r\n                {Link: \"/Settings/Branches\", Name: \"Отделы\"}\r\n            ],\r\n            Title: \"Настройки\",\r\n            Key: \"Settings\",\r\n            Icon: \"Settings.svg\"\r\n        }\r\n    ]\r\n};\r\n\r\nconst NavBarReducer = (state = initialState ,action) => {\r\n\tlet stateCopy = {...state};\r\n\t\r\n\tswitch (action.type) {\r\n\t\tdefault:\r\n\t\t\treturn stateCopy;\r\n\t}\r\n}\r\n\r\nexport default NavBarReducer;\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nimport NavBarReducer from './NavBarReducer.js';\r\nimport NotificationsReducer from './NotificationsReducer.js';\r\n\r\nimport ProductsReducer from './ManagerReducers/Products.js';\r\nimport AdditivesReducer from './ManagerReducers/Additives.js';\r\nimport OptionsReducer from './ManagerReducers/Options.js';\r\nimport CategoryReducer from './ManagerReducers/Category.js';\r\nimport StocksReducer from './ManagerReducers/Stocks.js';\r\n\r\nimport UsersReducer from './ManagerReducers/Users.js';\r\n\r\nimport CooperationsReducer from './ManagerReducers/Cooperations.js';\r\nimport ContactsReducer from './ManagerReducers/Contacts.js';\r\nimport CommentsReducer from './ManagerReducers/Comments.js';\r\nimport LevelsReducer from './ManagerReducers/Levels.js';\r\n\r\nimport BranchesReducer from './ManagerReducers/Branches.js';\r\n\r\nlet redusers = combineReducers({\r\n  form: formReducer,\r\n\tNavBar: NavBarReducer,\r\n  Notifications: NotificationsReducer,\r\n  Products: ProductsReducer,\r\n  Additives: AdditivesReducer,\r\n  Branches: BranchesReducer,\r\n  Options: OptionsReducer,\r\n  Category: CategoryReducer,\r\n  Stocks: StocksReducer,\r\n  Users: UsersReducer,\r\n  Levels: LevelsReducer,\r\n  Comments: CommentsReducer,\r\n  Contacts: ContactsReducer,\r\n  Cooperations: CooperationsReducer\r\n});\r\n\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/reduxStore';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nconst RenderAllTree = () => {\n\t\tReactDOM.render(\n\t\t\t\t\t<BrowserRouter>\n\t\t\t\t\t\t<Provider store={store}>\n\t\t\t\t\t\t\t<App/>\n\t\t\t\t\t\t</Provider>\n\t\t\t\t\t</BrowserRouter>\n\t\t\t,\n\t\tdocument.getElementById('root')\n\t);\n};\n\nRenderAllTree(store);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputPanel\":\"InputForm_InputPanel__2hr-b\",\"Head\":\"InputForm_Head__qbgNg\",\"Back\":\"InputForm_Back__2VUIa\",\"Title\":\"InputForm_Title__2z8Yj\",\"Form\":\"InputForm_Form__1tn56\",\"FormItem\":\"InputForm_FormItem__3Q-wf\",\"VisibilityList\":\"InputForm_VisibilityList__dMdQa\",\"Composition\":\"InputForm_Composition__2Vlct\",\"CompositionTitle\":\"InputForm_CompositionTitle__ALXe9\",\"FormButtons\":\"InputForm_FormButtons__2pjW_\",\"Submit\":\"InputForm_Submit__1Hohr\",\"Reset\":\"InputForm_Reset__2TMTY\",\"Popup\":\"InputForm_Popup__1wuuo\",\"PopupContent\":\"InputForm_PopupContent__3fGrp\",\"FormItemMessage\":\"InputForm_FormItemMessage__3K0vm\",\"FormItemMessageTitle\":\"InputForm_FormItemMessageTitle__1Cg6i\",\"FormItemMessageValue\":\"InputForm_FormItemMessageValue__2PsTP\",\"PopupHead\":\"InputForm_PopupHead__PIPz_\",\"PopupClose\":\"InputForm_PopupClose__RdBZ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notifications_Notification__28FfE\",\"Message\":\"Notifications_Message__X65FN\"};"],"sourceRoot":""}